-- This file has been generated by Dungeon Editor 1.3.1

--- level 1 ---

mapName("Upper Sewer Level")
setWallSet("sewers")
playStream("assets/samples/music/dungeon_ambient.ogg")
mapDesc([[
################################
#...############################
#.##############################
#...############################
#.#.#..#########################
#.#....#########################
################################
####################..##########
####################..##########
################...##..#########
################.#...#.#########
##########.#####.##.....########
##########.###.....###..########
##########.###.###.#.#.#########
#######.##.##..#...#.#.#########
#####...........#..#...#########
######.######..##.#..#.#########
##########...##.#.#..#.#########
########..........#.#...#.######
########.#...##.##..##.#...#####
########.#######....#...#.######
######...........##.#...#.######
######.#.##########..#.#..######
######.#...........#.....#######
######.#...###...#####.#########
######.#...#.#.##......#########
#####...###.......##############
#####.......####################
#####...########################
################################
################################
################################
]])
spawn("script_entity", 10,0,2, "texts")
	:setSource("-- Text and variables library\
\
t = {}\
\
function setT(name, value)\
   t[name] = value\
end\
\
function getT(name)\
   return t[name]\
end\
\
-- Letter (starting item) --\
setT(\"commission_letter\",[[\
This document is a binding commission of service to\
the Lords and Sovereign City of Waterdeep. \
The bearers of this document are agents of the Lords\
of Waterdeep and are granted full rights of passage\
beneath the City of Waterdeep. Any who woud dare\
interfere risk the full penalty of our wrath.\
Information has been presented to us that there is\
a plot afoot in our city. Evidence points to the\
sewers that run beneath Waterdeep. We have no\
information about the exact nature of the threat,\
but we feel the urgency is grave. We commission you\
to find the nature of the danger, and to destroy it\
if you are able. You are granted full rights of\
Marque. All treasures , artifacts, or other valuables\
are yours by right of conquest.\
\
This writ is made legal and binding, by our Mark on\
this fifth day of Marpenoth in the year of Shadows.\
]])\
\
-- TEXTS in alphabetical order --\
\
setT(\"carving_to_place\", \"What an odd Carving to place here.\")\
setT(\"character_can_translate_rune\", \" can translate this text.\\nIt is the Kobold rune for Entrance.\")\
setT(\"character_cannot_translate_rune\", \" This Rune is unrecognized.\\nNo one in the party can translate it.\")\
setT(\"dagger_fits\", \"The Dagger fits.\")\
setT(\"dagger_undetachable\", \"The dagger is undetachable!\")\
setT(\"dead_end\", \"Dead end?\")\
setT(\"dead_end_show\", \"yes\")\
setT(\"door_appears_stuck\",\"The door appears stuck.\")\
setT(\"door_appears_stuck_pressed\",\"no\")\
setT(\"door_member_try_open_ok\",\" forces the door!\")\
setT(\"door_member_try_open_failed\",\" tries to force the door and fails.\")\
setT(\"door_party_try_open\",\"The party tries to force the door...\")\
setT(\"door_party_try_open_ok\",\"The party forces the door.\")\
setT(\"door_party_try_open_failed\",\"The party tries to force the door and fails.\")\
setT(\"door_party_try_open_again\",\"You can try to force the door again by moving to it once more...\")\
setT(\"feel_dizzy\", \"You feel dizzy.\")\
setT(\"feels_no_longer_hungry\", \"feels no longer hungry!\")\
setT(\"goind_down\",\"Going down...\")\
setT(\"goind_up\",\"Going up...\")\
setT(\"hollow_laughter\",\"A hollow laughter echoes faintly.\")\
setT(\"look_like_travel_marker\", \"This looks like a Travel marker.\")\
setT(\"not_all_is_as_it_appears\", \"Not all is as it appears\")\
setT(\"only_the_strong\",\"Only the Strong shall pass.\")\
setT(\"room_move\",\"The Room seems to move.\")\
setT(\"smells_terrible_here\",\"It smells terrible here.\")\
setT(\"special_quest_for_this_level\", \"Special Quest for this level!\")\
setT(\"watch_your_step\", \"Watch your step.\")\
setT(\"entrance_is_blocked\",\"...the Entrance to the sewers is now blocked...\")\
setT(\"welcome_to_eob\", \"Welcome to the Eye of the Beholder recreation!\")\
setT(\"whispering_voice_illusion\", \"A whispering voice says 'Illusion, solid illusion'\")")
spawn("eob_rock", 10,15,0, "eob_rock_1")
spawn("eob_rock", 10,15,3, "eob_rock_2")
spawn("eob_sewers_door_metal", 16,11,2, "dungeon_door_metal_2")
	:addPullChain()
spawn("eob_sewers_door_metal", 18,13,0, "dungeon_door_metal_3")
	:addPullChain()
spawn("eob_lever", 13,14,0, "eob_lever_1")
	:addConnector("any", "eob_sewers_door_metal_1", "toggle")
spawn("eob_sewers_cave_in", 10,14,0, "eob_sewers_cave_in_1")
spawn("pressure_plate_hidden", 18,13,2, "pressure_plate_hidden_1")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setActivateOnce(true)
	:setSilent(true)
	:addConnector("activate", "script_entity_1", "openSW1")
spawn("eob_sewers_door_metal", 17,23,3, "dungeon_door_metal_4")
	:setDoorState("open")
spawn("eob_sewers_door_metal", 14,18,1, "dungeon_door_metal_5")
spawn("script_entity", 10,8,3, "script_entity_1")
	:setSource("-- scripts for LEVEL 1 --\
\
-- open secret walls at route 1 if 2 is closed\
function openSW1()\
\9if dungeon_secret_door_3:isClosed() and\
\9dungeon_secret_door_4:isClosed() then\
\9\9dungeon_secret_door_1:open()\
\9\9dungeon_secret_door_2:open()\
\9\9dungeon_secret_door_6:open()\
\9\9dungeon_secret_door_7:open()\
\9\9spawn(\"eob_wall_button\", 1, 8, 22, 3, \"wallbutton_route1\")\
\9\9wallbutton_route1:addConnector(\"toggle\",\"dungeon_door_metal_6\",\"toggle\")\
\9end\
end\
\
-- open secret walls at route 2 if 1 is closed\
function openSW2()\
\9if dungeon_secret_door_1:isClosed() and\
\9dungeon_secret_door_2:isClosed() then\
\9\9dungeon_secret_door_3:open()\
\9\9dungeon_secret_door_4:open()\
\9\9dungeon_secret_door_8:open()\
\9\9dungeon_secret_door_9:open()\
\9\9spawn(\"eob_wall_button\", 1, 9, 21, 2, \"wallbutton_route2\")\
\9\9wallbutton_route2:addConnector(\"toggle\",\"dungeon_door_metal_6\",\"toggle\")\
\9end\
end\
\
function MessageSmellsTerrible()\
\9hudPrint(texts.getT(\"smells_terrible_here\"))\
end\
\
function SpecialQuest1()\
\9if counter_1:getValue() == 0 then\
\9\9local itc = libObject.containsItem(dungeon_alcove_1, \"eob_dagger\")\
\9\9if itc then\
\9\9\9counter_1:increment()\
\9\9\9if itc:getStackSize()>1 then\
\9\9\9\9itc:setStackSize(itc:getStackSize()-1)\
\9\9\9else\
\9\9\9\9itc:destroy()\
\9\9\9end\
\9\9\9hudPrint(texts.getT(\"special_quest_for_this_level\"))\
\9\9\9dungeon_alcove_1:addItem(spawn(\"eob_dagger_guinsoo\"))\
\9\9\9secret_1:activate()\
\9\9end\
\9end\
end")
spawn("pressure_plate_hidden", 16,11,0, "pressure_plate_hidden_2")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setActivateOnce(true)
	:setSilent(true)
	:addConnector("activate", "script_entity_1", "openSW2")
spawn("eob_sewers_door_metal", 8,21,2, "dungeon_door_metal_6")
spawn("eob_sewers_door_metal", 19,19,0, "dungeon_door_metal_7")
spawn("eob_lever", 18,19,0, "eob_lever_2")
	:addConnector("any", "dungeon_door_metal_7", "toggle")
spawn("eob_rock", 20,17,2, "eob_rock_4")
spawn("eob_sewers_door_metal", 22,13,0, "dungeon_door_metal_8")
spawn("eob_sewers_pressure_plate", 22,17,1, "dungeon_pressure_plate_3")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(true)
	:addConnector("activate", "dungeon_door_metal_9", "open")
	:addConnector("deactivate", "dungeon_door_metal_9", "close")
spawn("eob_sewers_door_metal", 22,19,0, "dungeon_door_metal_9")
spawn("eob_rock", 21,21,2, "eob_rock_5")
spawn("eob_sewers_door_metal", 22,23,2, "dungeon_door_metal_10")
	:addPullChain()
spawn("eob_arrow", 16,24,1, "eob_arrow_3")
spawn("eob_shield", 10,25,2, "eob_shield_1")
spawn("eob_sewers_pressure_plate", 16,23,3, "dungeon_pressure_plate_4")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(true)
	:addConnector("activate", "dungeon_door_metal_4", "close")
spawn("eob_sewers_alcove", 12,25,0, "dungeon_alcove_1")
	:setActivateAlways(true)
	:addItem(spawn("eob_scroll_armor"))
	:addItem(spawn("eob_scroll_bless"))
	:addConnector("activate", "script_entity_1", "SpecialQuest1")
spawn("eob_sewers_secret_button", 19,21,3, "eob_sewers_secret_button_4")
	:addConnector("toggle", "dungeon_secret_door_10", "toggle")
	:addConnector("toggle", "dungeon_secret_door_11", "toggle")
	:addConnector("toggle", "dungeon_secret_door_12", "toggle")
	:addConnector("toggle", "secret_3", "activate")
spawn("eob_remains_of_tod_uphill", 14,14,2, "eob_remains_of_tod_uphill_1")
spawn("secret", 11,25,1, "secret_1")
spawn("secret", 26,20,1, "secret_2")
spawn("eob_dart_2", 25,18,0, "eob_dart_2_1")
spawn("eob_leech", 9,25,0, "eob_leech_1")
spawn("eob_leech", 5,27,0, "eob_leech_2")
spawn("eob_kobold", 11,17,1, "eob_kobold_1")
	:addItem(spawn("eob_dagger"))
spawn("eob_kobold", 12,19,0, "eob_kobold_2")
spawn("eob_kobold", 24,19,1, "eob_kobold_3")
	:addItem(spawn("eob_dagger"))
spawn("eob_kobold", 11,18,1, "eob_kobold_4")
	:addItem(spawn("eob_dagger"))
spawn("eob_kobold", 11,27,3, "eob_kobold_5")
	:addItem(spawn("eob_dagger"))
spawn("eob_kobold", 16,12,3, "eob_kobold_6")
spawn("eob_kobold", 20,8,1, "eob_kobold_7")
	:addItem(spawn("eob_dagger"))
spawn("eob_kobold", 20,15,1, "eob_kobold_8")
	:addItem(spawn("eob_dagger"))
spawn("torch_holder", 15,15,1, "torch_holder_2")
	:addTorch()
spawn("torch_holder", 11,19,2, "torch_holder_3")
	:addTorch()
spawn("torch_holder", 15,24,2, "torch_holder_4")
	:addTorch()
spawn("torch_holder", 6,28,2, "torch_holder_5")
	:addTorch()
spawn("torch_holder", 23,11,1, "torch_holder_6")
	:addTorch()
spawn("counter", 12,24,0, "counter_1")
spawn("eob_wall_button", 23,12,2, "eob_wall_button_1")
	:addConnector("toggle", "dungeon_door_metal_8", "toggle")
spawn("eob_wall_button", 15,19,3, "eob_wall_button_2")
	:addConnector("toggle", "dungeon_door_metal_5", "toggle")
spawn("pressure_plate_hidden", 25,19,0, "pressure_plate_hidden_4")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setActivateOnce(true)
	:setSilent(true)
	:addConnector("activate", "script_entity_1", "MessageSmellsTerrible")
spawn("script_entity", 11,1,0, "script_beginning")
	:setSource("function EOBsetDefaultParty()\
 -- set default party (not used for now, there is new feature from AH)\
\
\9party:getChampion(1):setName(\"Allabar\")\
\9party:getChampion(1):setRace(\"Human\")\
\9party:getChampion(1):setClass(\"Fighter\")\
\9party:getChampion(1):setSex(\"male\")\
\9party:getChampion(1):setPortrait(\"mod_assets/textures/portraits/eob1-allabar.tga\")\
\9\
\9party:getChampion(2):setName(\"Ariel\")\
\9party:getChampion(2):setRace(\"Human\")\
\9party:getChampion(2):setClass(\"Ranger\")\
\9party:getChampion(2):setSex(\"female\")\
\9party:getChampion(2):setPortrait(\"mod_assets/textures/portraits/eob1-ariel.tga\")\
\9\
\9party:getChampion(3):setName(\"Tenmiyana\")\
\9party:getChampion(3):setRace(\"Lizardman\")\9\
\9party:getChampion(3):setSex(\"female\")\
\9party:getChampion(3):setPortrait(\"mod_assets/textures/portraits/eob1-tenmiyana.tga\")\
\9\
\9party:getChampion(4):setName(\"Valanau\")\
\9party:getChampion(4):setRace(\"Human\")\
\9party:getChampion(4):setSex(\"male\")\
\9party:getChampion(4):setPortrait(\"mod_assets/textures/portraits/eob1-valanau.tga\")\
end\
\
function EOBsetDefaultItems()\
 -- set default items for the party [WIP] --\
\9party:getChampion(1):insertItem(7,spawn(\"eob_short_sword\"))\
\9party:getChampion(1):insertItem(11,spawn(\"eob_note_commission\"))\
\9party:getChampion(1):getItem(11):setScrollText(texts.getT(\"commission_letter\"))\
\9party:getChampion(1):insertItem(12,spawn(\"eob_note_map_level1\"))\
\9party:getChampion(1):getItem(12):setScrollImage(\"mod_assets/textures/gui/scroll_images/sewers_level1_map512.dds\")\
\9party:getChampion(1):insertItem(13,spawn(\"eob_iron_rations\"))\
\9party:getChampion(1):insertItem(14,spawn(\"torch\"))\
\9party:getChampion(2):insertItem(7,spawn(\"hand_axe\"))\
\9party:getChampion(2):insertItem(11,spawn(\"eob_iron_rations\"))\
\9party:getChampion(3):insertItem(11,spawn(\"eob_iron_rations\"))\
\9party:getChampion(3):insertItem(7,spawn(\"compass\"))\
\9party:getChampion(3):insertItem(8,spawn(\"eob_dagger\"))\
\9party:getChampion(4):insertItem(12,spawn(\"eob_iron_rations\"))\
end\
\
\
-- helper function for set the Wall text for Kobold runes\
function setWallTextForRune(wt)\
\9local reader = libParty.getFirstPartyRace(\"Lizardman\")\
\9local txt = findEntity(wt)\
\9if reader then\
\9\9txt:setWallText(party:getChampion(reader):getName()..texts.getT(\"character_can_translate_rune\"))\
\9else\
\9\9txt:setWallText(texts.getT(\"character_cannot_translate_rune\"))\
\9end\
end\
\
function TextRune1()\
\9setWallTextForRune(\"dungeon_wall_text_rune1\")\
end\
\
function TextRune2()\
\9setWallTextForRune(\"dungeon_wall_text_rune2\")\
end\
\
function FallingRocks()\
\9spawn(\"fx\", 1, 10, 14, 2, \"dust1\")\
\9dust1:setParticleSystem(\"earthquake_dust\")\
\9-- spawn(\"fx\", 1, 10, 15, 0, \"dust2\")\
\9-- dust2:setParticleSystem(\"earthquake_dust\")\
\9party:shakeCamera(1,1)\
\9playSoundAt(\"rockfall_01\", 1, 10, 14)\
end\
\
-- EOBsetDefaultParty()\
EOBsetDefaultItems()\
\
hudPrint(\" \")\
hudPrint(\" \")\
hudPrint(\" \")\
hudPrint(texts.getT(\"welcome_to_eob\"))\
hudPrint(\" \")\
hudPrint(texts.getT(\"entrance_is_blocked\"))")
spawn("pressure_plate_hidden", 18,12,1, "pressure_plate_hidden_5")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_beginning", "TextRune1")
spawn("pressure_plate_hidden", 15,23,1, "pressure_plate_hidden_7")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_beginning", "TextRune2")
spawn("eob_lock_picks", 14,14,1, "eob_lock_picks_1")
spawn("eob_rations", 20,7,3, "eob_rations_2")
spawn("eob_rations", 10,19,2, "eob_rations_3")
spawn("eob_rations", 11,19,2, "eob_rations_4")
spawn("eob_sewers_wall_text_rune1", 18,12,1, "dungeon_wall_text_rune1")
	:setWallText("")
spawn("floor_dirt", 14,16,0, "floor_dirt_1")
spawn("eob_sewers_wall_text_rune1", 15,23,0, "dungeon_wall_text_rune2")
	:setWallText("")
spawn("sewers_fog", 13,15,2, "sewers_fog_1")
spawn("sewers_fog", 18,15,2, "sewers_fog_2")
spawn("sewers_fog", 22,11,1, "sewers_fog_3")
spawn("sewers_fog", 22,21,2, "sewers_fog_4")
spawn("sewers_fog", 10,23,2, "sewers_fog_5")
spawn("sewers_fog", 6,27,2, "sewers_fog_6")
spawn("sewers_fog", 10,18,0, "sewers_fog_7")
spawn("eob_sewers_secret_door", 17,16,0, "dungeon_secret_door_1")
spawn("eob_sewers_secret_door", 17,17,0, "dungeon_secret_door_2")
spawn("eob_sewers_secret_door", 21,11,3, "dungeon_secret_door_3")
spawn("eob_sewers_secret_door", 22,11,3, "dungeon_secret_door_4")
spawn("eob_sewers_secret_door", 14,24,2, "dungeon_secret_door_6")
spawn("eob_sewers_secret_door", 14,26,0, "dungeon_secret_door_7")
spawn("eob_sewers_secret_door", 13,26,1, "dungeon_secret_door_8")
spawn("eob_sewers_secret_door", 13,26,3, "dungeon_secret_door_9")
spawn("eob_sewers_secret_door", 19,20,2, "dungeon_secret_door_10")
spawn("eob_sewers_secret_door", 18,20,1, "dungeon_secret_door_11")
spawn("eob_sewers_secret_door", 19,20,0, "dungeon_secret_door_12")
spawn("eob_sewers_secret_door", 25,21,0, "dungeon_secret_door_5")
spawn("floor_dirt", 10,17,1, "floor_dirt_4")
spawn("floor_dirt", 10,19,3, "floor_dirt_5")
spawn("floor_dirt", 8,24,3, "floor_dirt_6")
spawn("floor_dirt", 5,28,0, "floor_dirt_7")
spawn("floor_dirt", 14,24,3, "floor_dirt_8")
spawn("floor_dirt", 25,22,2, "floor_dirt_9")
spawn("floor_dirt", 23,20,2, "floor_dirt_10")
spawn("floor_dirt", 21,18,2, "floor_dirt_11")
spawn("floor_dirt", 21,7,3, "floor_dirt_13")
spawn("floor_dirt", 23,12,1, "floor_dirt_14")
spawn("eob_sewers_door_metal", 14,14,0, "eob_sewers_door_metal_1")
spawn("eob_sewers_pressure_plate", 13,18,2, "eob_sewers_pressure_plate_1")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:addConnector("activate", "dungeon_door_metal_5", "toggle")
spawn("eob_sewers_pressure_plate", 22,14,2, "eob_sewers_pressure_plate_2")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(true)
	:addConnector("activate", "dungeon_door_metal_8", "toggle")
spawn("sewers_fog", 25,19,1, "sewers_fog_8")
spawn("dungeon_wall_dirt_1", 25,18,3, "dungeon_wall_dirt_1_2")
spawn("dungeon_wall_dirt_2", 25,18,1, "dungeon_wall_dirt_2_1")
spawn("floor_dirt", 26,19,2, "floor_dirt_12")
spawn("floor_dirt", 24,19,2, "floor_dirt_16")
spawn("eob_sewers_secret_button", 25,21,1, "eob_sewers_secret_button_1")
	:addConnector("toggle", "dungeon_secret_door_5", "toggle")
	:addConnector("toggle", "secret_2", "activate")
spawn("floor_dirt", 6,21,2, "floor_dirt_18")
spawn("floor_dirt", 13,21,2, "floor_dirt_19")
spawn("floor_dirt", 20,25,1, "floor_dirt_20")
spawn("floor_dirt", 17,26,1, "floor_dirt_21")
spawn("floor_dirt", 12,26,2, "floor_dirt_22")
spawn("floor_dirt", 19,22,1, "floor_dirt_23")
spawn("floor_dirt", 19,11,0, "floor_dirt_24")
spawn("dungeon_ivy_1", 25,22,1, "dungeon_ivy_1_1")
spawn("dungeon_ivy_1", 24,19,0, "dungeon_ivy_1_2")
spawn("dungeon_ivy_1", 26,19,0, "dungeon_ivy_1_3")
spawn("dungeon_ivy_1", 26,19,1, "dungeon_ivy_1_4")
spawn("dungeon_ivy_1", 25,20,1, "dungeon_ivy_1_5")
spawn("dungeon_ivy_1", 24,19,2, "dungeon_ivy_1_6")
spawn("dungeon_ivy_2", 25,20,3, "dungeon_ivy_2_1")
spawn("dungeon_ivy_2", 25,18,0, "dungeon_ivy_2_2")
spawn("dungeon_ivy_1", 10,15,2, "dungeon_ivy_1_7")
spawn("dungeon_ivy_1", 20,7,0, "dungeon_ivy_1_8")
spawn("dungeon_ivy_2", 23,18,2, "dungeon_ivy_2_3")
spawn("dungeon_ivy_1", 23,20,1, "dungeon_ivy_1_9")
spawn("dungeon_ivy_2", 7,28,1, "dungeon_ivy_2_4")
spawn("dungeon_ivy_1", 7,28,2, "dungeon_ivy_1_10")
spawn("dungeon_ivy_1", 11,21,2, "dungeon_ivy_1_11")
spawn("dungeon_ivy_2", 11,17,0, "dungeon_ivy_2_5")
spawn("eob_wall_button", 16,24,1, "eob_wall_button_3")
	:addConnector("toggle", "dungeon_door_metal_4", "open")
spawn("floor_dirt", 16,14,2, "floor_dirt_25")
spawn("dungeon_ivy_1", 17,18,1, "dungeon_ivy_1_12")
spawn("temple_ceiling_lamp", 25,19,0, "temple_ceiling_lamp_1")
spawn("eob_sewers_ceiling_shaft", 25,19,0, "eob_sewers_ceiling_shaft_1")
spawn("script_entity", 13,1,1, "libParty")
	:setSource("-- Library of helper functions for the party entity --\
\
-- returns first Champion of race = race(string) in the party (order_id), otherwise returns nil\
function getFirstPartyRace(race)\
\9for p=1,4 do\
\9\9if party:getChampion(p):getRace() == race then\
\9\9\9return p\
\9\9end\
\9end\
\9return nil\
end\
\
-- returns strength of whole party (number) --\
function getPartyStrength()\
\9local s = 0\
\9for p=1,4 do\
\9\9if party:getChampion(p):getEnabled() and party:getChampion(p):isAlive() then\
\9\9\9s = s + party:getChampion(p):getStat(\"strength\")\
\9\9end\
\9end\
\9return s\
end\
\
-- returns the strongest member of the party (order_id) --\
function getStrongestMember()\
\9local m = 0\
\9for p=1,4 do\
\9\9if party:getChampion(p):getEnabled() and party:getChampion(p):isAlive() then\
\9\9\9if m == 0 then\
\9\9\9\9m = p\
\9\9\9else\
\9\9\9\9if party:getChampion(p):getStat(\"strength\") > party:getChampion(m):getStat(\"strength\") then\
\9\9\9\9\9m = p\
\9\9\9\9end\
\9\9\9end\
\9\9end\
\9end\
\9return m\
end\
")
spawn("teleporter", 7,14,3, "teleporter_7")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setTeleportTarget(19,23,3,2)
spawn("eob_sewers_wall_text_long", 7,15,2, "eob_sewers_wall_text_long_3")
	:setWallText("Teleport to Level 2")
spawn("eob_sewers_wall_text_long", 8,15,2, "eob_sewers_wall_text_long_5")
	:setWallText("This room is for the Testing only, you can teleport to lower levels.")
spawn("dungeon_ivy_1", 13,16,3, "dungeon_ivy_1_14")
spawn("dungeon_ceiling_root_2", 13,16,2, "dungeon_ceiling_root_2_1")
spawn("dungeon_ceiling_root_3", 14,16,2, "dungeon_ceiling_root_3_1")
spawn("script_entity", 1,11,3, "illusion_pits")
	:setSource("function activate(pit)\
\9for e in entitiesAt(pit.level,pit.x ,pit.y) do\
\9\9if e.name == 'eob_sewers_pit_illusion_off' then\
\9\9\9e:destroy()\
\9\9end\
\9end\
\9spawn(\"eob_sewers_pit_illusion_on\", pit.level, pit.x, pit.y, 0)\
\9fw.debugPrint(\"Illusionary pit and Teleporter at \"..pit.x..\",\"..pit.y..\" deactivated\")\
end\
\
function deactivate(pit)\
\9for e in entitiesAt(pit.level,pit.x ,pit.y) do\
\9\9if e.name == 'eob_sewers_pit_illusion_on' then\
\9\9\9e:destroy()\
\9\9end\
\9end\
\9spawn(\"eob_sewers_pit_illusion_off\", pit.level, pit.x, pit.y, 0)\
\9fw.debugPrint(\"Illusionary pit and Teleporter at \"..pit.x..\",\"..pit.y..\" activated\")\
end\
\
function toggle(pit)\
\9for e in entitiesAt(pit.level,pit.x ,pit.y) do\
\9\9if e.name == 'teleporter' then\
\9\9\9if e:isActivated() then\
\9\9\9\9e:deactivate()\
\9\9\9\9self.deactivate(pit)\
\9\9\9else\
\9\9\9\9e:activate()\
\9\9\9\9self.activate(pit)\
\9\9\9end\
\9\9end\
\9end\
end\
\
function damageToPartyActivate()\
\9fw.addHooks('party','teleporter_pits', {\
\9\9onMove = function(self,dir)\
\9\9\9local p = false\
\9\9\9local t = false\
\9\9\9for e in help.entitiesAtDir(self,dir) do\
\9\9\9\9if e.name == 'eob_sewers_pit_illusion_on' then\
\9\9\9\9\9p = true\
\9\9\9\9end\
\9\9\9\9if e.name == 'teleporter' then\
\9\9\9\9\9t = e\
\9\9\9\9end\
\9\9\9end\
\9\9\9for e in help.entitiesAtSameTile(self) do\
\9\9\9\9if e.name == 'eob_sewers_pit_illusion_on' then\
\9\9\9\9\9p = true\
\9\9\9\9end\
\9\9\9\9if e.name == 'teleporter' then\
\9\9\9\9\9t = e\
\9\9\9\9end\
\9\9\9end\
\9\9\9if p and t then\
\9\9\9\9local timer = findEntity(\"teleporter_pits_timer\")\
\9\9\9\9if (not timer) then\
\9\9\9\9\9timer = spawn(\"timer\", t.level, t.x, t.y, t.facing, \"teleporter_pits_timer\")\
\9\9\9\9\9timer:setTimerInterval(0.4)\
\9\9\9\9\9timer:addConnector('activate','illusion_pits','doDamageToParty')\
\9\9\9\9end\
\9\9\9\9timer:activate()\
\9\9\9\9playSound(\"party_fall\")\
\9\9\9end\
\9\9end\
\9})\
\9fw.debugPrint(\"Party damage from illusionary pits activated\")\
end\
\
function doDamageToParty()\
\9power = 30\
\9damageTile(party.level, party.x, party.y, 0, 0, \"physical\", power)\
\9playSound(\"party_land\")\
\9party:shakeCamera(0.3,0.3)\
\9fw.debugPrint(\"Party gets damage from illusionary pits by power = \"..power)\
\9-- timer = findEntity(\"teleporter_pits_timer\")\
\9-- timer:deactivate()\
\9teleporter_pits_timer:deactivate()\
end\
")
spawn("script_entity", 1,12,0, "throwable_portcullis")
	:setSource("activeThrowableDoor = {}\
\
function activate()\
\
\9fw.addHooks('party','throwable_portcullis', {\
\9\9onMove = function(self,dir)\
\9\9\9for e in help.entitiesAtDir(self,dir) do\
\9\9\9\9if ( (e.name == 'door_throwable' or e.name == 'door_throwable_force') and \
\9\9\9\9\9e.facing == (dir + 2)%4) then\
\9\9\9\9\9throwable_portcullis.doTheMagic(e)\
\9\9\9\9end\
\9\9\9end\
\9\9\9for e in help.entitiesAtSameTile(self) do\
\9\9\9\9if ( (e.name == 'door_throwable' or e.name == 'door_throwable_force') and \
\9\9\9\9\9e.facing == dir) then\
\9\9\9\9\9throwable_portcullis.doTheMagic(e)\
\9\9\9\9end\
\9\9\9end\
\9\9end\
\9})\
\
\9local timer = spawn(\"timer\", 1, 1, 1, 0, \"throwable_door_timer\")\
\9timer:setTimerInterval(0.1)\
\9timer:addConnector('activate','throwable_portcullis','deactivate')\
\9\9\
\9fw.debugPrint(\"Throwable portcullis activated\")\
end\
\
function doTheMagic(script)\
\9if script.getState() == \"closed\" then\
\9for e in help.entitiesAtSameTile(script) do\
\9\9if ( (e.name == 'eob_sewers_door_portcullis') and\
\9\9\9e.facing == script.facing) then\
\9\9\9e:setDoorState('closed')\
\9\9\9-- if not findEntity(\"blocker_\"..e.id) then\
\9\9\9--\9spawn(\"blocker\", e.level, e.x, e.y, e.facing, \"blocker_\"..e.id)\
\9\9\9-- end\
\9\9\9local timer = findEntity(\"throwable_door_timer\")\
\9\9\9timer:activate()\
\9\9\9throwable_portcullis.activeThrowableDoor[script.id] = e.id\
\9\9end\
\9end\9\
\9end\
end\
\
function deactivate()\
\9for id,eid in pairs(throwable_portcullis.activeThrowableDoor) do\
\9\9local door = findEntity(eid)\
\9\9door:setDoorState('open')\
\9\9throwable_portcullis.activeThrowableDoor[id] = nil\
\9\9for e in help.entitiesAtSameTile(door) do\
\9\9\9if ( e.name == 'door_throwable_force' ) then\
\9\9\9\9if (forceable_doors.isForced()) then\
\9\9\9\9\9self.open(e)\
\9\9\9\9end\
\9\9\9end\
\9\9end\
\9end\
\9local timer = findEntity(\"throwable_door_timer\")\
\9timer:deactivate()\
end\
\
function open(script)\
\9if script.getState() == \"closed\" then\
\9\9script.setState(\"open\")\
\9\9local fake = findEntity(\"fake_portcullis_\"..script.id)\
\9\9local door = findEntity(\"portcullis_\"..script.id)\
\9\9local block = findEntity(\"blocker_\"..script.id)\
\9\9fake:destroy()\
\9\9block:destroy()\
\9\9door:setDoorState(\"closed\")\
\9\9door:open()\
\9end\
end\
\
function close(script)\
\9if script.getState() == \"open\" then\
\9\9script.setState(\"closed\")\
\9\9local door = findEntity(\"portcullis_\"..script.id)\
\9\9spawn(\"blocker\", script.level, script.x, script.y, script.facing, \"blocker_\"..script.id)\
\9\9door:setDoorState(\"open\")\
\9\9door:close()\
\9\9local timer = findEntity(\"timer_\"..script.id)\
\9\9timer:activate()\
\9end\
end\
\
function spawnFakePortcullis(script)\
\9spawn(\"eob_portcullis_throwable\", script.level, script.x, script.y, script.facing, \"fake_portcullis_\"..script.id)\
\9local door = findEntity(\"portcullis_\"..script.id)\
\9local timer = findEntity(\"timer_\"..script.id)\
\9timer:deactivate()\
\9door:setDoorState(\"open\")\
end")
spawn("script_entity", 1,13,2, "ladders_updown")
	:setSource("\
function activate()\
\9fw.addHooks('party','ladders_updown', {\
\9\9onMove = function(self,dir)\
\9\9\9local ldn = false\
\9\9\9local lup = false\
\9\9\9local t = false\
\9\9\9for e in help.entitiesAtDir(self,dir) do\
\9\9\9\9if e.name == 'eob_ladder_down' then\
\9\9\9\9\9ldn = true\
\9\9\9\9end\
\9\9\9\9if e.name == 'eob_ladder_up' then\
\9\9\9\9\9lup = true\
\9\9\9\9end\
\9\9\9\9if e.name == 'teleporter' then\
\9\9\9\9\9t = e\
\9\9\9\9end\
\9\9\9end\9\9\
\9\9\9if ldn and t then\
\9\9\9\9playSound(\"ladder_steps2\")\
\9\9\9\9hudPrint(\"Going down...\")\
\9\9\9end\
\9\9\9if lup and t then\
\9\9\9\9playSound(\"ladder_steps2\")\
\9\9\9\9hudPrint(\"Going up...\")\
\9\9\9end\
\9\9end\
\9})\
\9fw.debugPrint(\"Party ladders activated\")\
end")
spawn("eob_sewers_wall_drainage", 14,14,1, "eob_sewers_wall_drainage_2")
spawn("eob_sewers_wall_drainage", 16,14,3, "eob_sewers_wall_drainage_3")
spawn("eob_sewers_wall_drainage", 17,17,1, "eob_sewers_wall_drainage_4")
spawn("eob_sewers_wall_drainage", 19,17,3, "eob_sewers_wall_drainage_5")
spawn("eob_sewers_wall_drainage", 25,21,3, "eob_sewers_wall_drainage_6")
spawn("eob_sewers_wall_drainage", 23,21,1, "eob_sewers_wall_drainage_7")
spawn("eob_sewers_wall_drainage", 13,21,2, "eob_sewers_wall_drainage_8")
spawn("eob_sewers_wall_drainage", 13,21,0, "eob_sewers_wall_drainage_9")
spawn("script_entity", 21,0,2, "logfw_init")
	:setSource("options = {}\
-- load modules\
options.modules = {\
\9monsters_can_open_doors = false,\
\9damage_dealing_doors = false,\
\9illusion_walls = true,\
\9talk = false,\
}\
\
spawn(\"LoGFramework\", 1,1,1,0,'fwInit')\
fwInit:open()\
\
-- timer will call this method automatically \
-- 0.5 second after the game is started\
-- activate loaded modules here\
-- you can also set debug-flag on here\
function main()\
\9fw.debug.enabled = false\
\
\9illusion_walls.activate()\
\
\9fwInit:close() --must be called\
\9\
\9eob_spells:activate()\
end\
")
spawn("timer", 0,8,0, "timer_script_activation")
	:setTimerInterval(0.6)
	:activate()
	:addConnector("activate", "script_start", "activate")
	:addConnector("activate", "timer_script_activation_off", "deactivate")
spawn("script_entity", 1,9,0, "timer_script_activation_off")
	:setSource("function deactivate()\
\9timer_script_activation:deactivate()\
end")
spawn("script_entity", 1,8,2, "script_start")
	:setSource("-- Start scripts on timer --\
\
function activate()\
\9\
\9if (not fw.debug.enabled) then script_beginning.FallingRocks() end\
\9illusion_pits.damageToPartyActivate()\
\9throwable_portcullis.activate()\
\9ladders_updown.activate()\
\9forceable_doors.activate()\
\9party_rotators.activate()\
\9\
\9-- Wently's Notes --\
\9spawn(\"WentlysNoteSpawner\", 1,1,1,0,'wnInit')\
\9wnInit:open()\
\9wnInit:destroy()\
\9wentlys_notes.activate()\
end")
spawn("eob_sewers_pillar", 19,20,1, "eob_sewers_pillar_6")
spawn("script_entity", 17,1,1, "scriptEffects")
	:setSource("-- script for timed effects [WIP, testing...] --\
-- \
--  \"strBoost\": increasing strength \
-- \
\
ActiveEffect = {}\
\
function activateEffect(effect, champion, amount, duration)\
\9if self.ActiveEffect[effect..\"_\"..champion] then\
\9\9return false\
\9end\
\9fw.debugPrint(\"Effect \"..effect..\" is activated: Champion=\"..champion..\", Amount=\"..amount..\", Duration=\"..duration..\"s\")\
\9self.ActiveEffect[effect..\"_\"..champion] = { amount=amount, duration=duration }\
\9local timer = findEntity(\"timer_effect_\"..effect..\"_\"..champion)\
\9timer:setTimerInterval(duration)\
\9timer:activate()\
\9return true\
end\
\
function stopEffect_strBoost(id)\
\9local champion = party:getChampion(id)\
\9champion:setStatMax(\"strength\", champion:getStatMax(\"strength\") - self.ActiveEffect[\"strBoost_\"..id].amount)\
\9self.ActiveEffect[\"strBoost_\"..id] = nil\
\9local timer = findEntity(\"timer_effect_strBoost_\"..id)\
\9timer:deactivate()\
\9playSound(\"generic_spell\")\
\9fw.debugPrint(\"strBoost deactivated for champion=\"..id)\
\9fw.debugPrint(\"Actual Stat=\"..champion:getStat(\"strength\")..\", StatMax=\"..champion:getStatMax(\"strength\"))\
\9hudPrint(champion:getName()..\" feels less stronger!\")\
end\
function stopEffect_strBoost_1()\
\9self.stopEffect_strBoost(1)\
end\
function stopEffect_strBoost_2()\
\9self.stopEffect_strBoost(2)\
end\
function stopEffect_strBoost_3()\
\9self.stopEffect_strBoost(3)\
end\
function stopEffect_strBoost_4()\
\9self.stopEffect_strBoost(4)\
end\
\
spawn(\"timer\",1,1,1,0, \"timer_effect_strBoost_1\")\
timer_effect_strBoost_1:addConnector(\"activate\",\"scriptEffects\",\"stopEffect_strBoost_1\")\
spawn(\"timer\",1,1,1,0, \"timer_effect_strBoost_2\")\
timer_effect_strBoost_2:addConnector(\"activate\",\"scriptEffects\",\"stopEffect_strBoost_2\")\
spawn(\"timer\",1,1,1,0, \"timer_effect_strBoost_3\")\
timer_effect_strBoost_3:addConnector(\"activate\",\"scriptEffects\",\"stopEffect_strBoost_3\")\
spawn(\"timer\",1,1,1,0, \"timer_effect_strBoost_4\")\
timer_effect_strBoost_4:addConnector(\"activate\",\"scriptEffects\",\"stopEffect_strBoost_4\")\
")
spawn("floor_corpse", 25,19,1, "floor_corpse_2")
spawn("secret", 18,21,2, "secret_3")
spawn("script_entity", 1,14,2, "forceable_doors")
	:setSource("forceable_doors_to_close = {}\
\
function activate()\
\9fw.addHooks('party','force_door', {\
\9\9onMove = function(self,dir)\
\9\9\9for e in help.entitiesAtDir(self,dir) do\
\9\9\9\9if ((e.name == 'eob_sewers_door_metal_force') and e.facing == (dir + 2)%4) then\
\9\9\9\9\9forceable_doors.force(e)\
\9\9\9\9end\
\9\9\9end\
\9\9\9for e in help.entitiesAtSameTile(self) do\
\9\9\9\9if ((e.name == 'eob_sewers_door_metal_force') and e.facing == dir) then\
\9\9\9\9\9forceable_doors.force(e)\
\9\9\9\9end\
\9\9\9end\
\9\9end\
\9})\
\9fw.debugPrint(\"Forceable / Stucked doors activated\")\
end\
\
function isForced()\
\9local member = party:getChampion(libParty.getStrongestMember())\
\9local partystr = member:getStat(\"strength\")\
\9local doorstr = math.random(1,25)\
\9fw.debugPrint(\"ForceDoor: partyStr=\"..partystr..\", doorStr=\"..doorstr)\
\9if (partystr>doorstr) then\
\9\9hudPrint(member:getName()..texts.getT(\"door_member_try_open_ok\"))\
\9\9return true\
\9else\
\9\9hudPrint(member:getName()..texts.getT(\"door_member_try_open_failed\"))\
\9\9hudPrint(texts.getT(\"door_party_try_open_again\"))\
\9\9return false\
\9end\
end\
\
function force(door)\
\9if door:isClosed() then\
\9\9if (self.isForced()) then\
\9\9\9door:open()\
\9\9else\
\9\9\9door:open()\
\9\9\9local timer = findEntity(\"force_open_door_timer\")\
\9\9\9if (not timer) then\
\9\9\9\9timer = spawn(\"timer\", self.level, self.x, self.y, self.facing, \"force_open_door_timer\")\
\9\9\9\9timer:setTimerInterval(0.4)\
\9\9\9\9timer:addConnector(\"activate\",\"forceable_doors\",\"close\")\
\9\9\9end\
\9\9\9forceable_doors.forceable_doors_to_close[door.id] = door\
\9\9\9timer:activate()\
\9\9end\
\9end\
end\
\
function close()\
\9force_open_door_timer:deactivate()\
\9for id,door in pairs(forceable_doors.forceable_doors_to_close) do\
\9\9door:close()\
\9\9forceable_doors.forceable_doors_to_close[id] = nil\
\9end\
end")
spawn("eob_sewers_cave_in_ceiling", 10,14,0, "eob_sewers_cave_in_ceiling_2")
spawn("eob_sewers_cave_in_ceiling", 10,13,3, "eob_sewers_cave_in_ceiling_3")
spawn("script_entity", 1,15,2, "party_rotators")
	:setSource("function activate()\
\
fw.addHooks('party','party_rotator', {\
\9onMove = function(self,dir)\
\9\9for e in help.entitiesAtDir(self,dir) do\
\9\9\9if e.name == 'teleporter_rotator90' then\
\9\9\9\9e:setTeleportTarget(e.x, e.y, (self.facing + 1)%4)\
\9\9\9\9fw.debugPrint(\"Party rotated by 90\")\
\9\9\9end\
\9\9\9if e.name == 'teleporter_rotator180' then\
\9\9\9\9e:setTeleportTarget(e.x, e.y, (self.facing + 2)%4)\
\9\9\9\9fw.debugPrint(\"Party rotated by 180\")\
\9\9\9end\
\9\9\9if e.name == 'teleporter_rotator270' then\9\9\9\9\9\
\9\9\9\9e:setTeleportTarget(e.x, e.y, (self.facing + 3)%4)\
\9\9\9\9fw.debugPrint(\"Party rotated by 270\")\
\9\9\9end\
\9\9end\
\9end\
})\
fw.debugPrint(\"Teleporter rotators activated\")\
\
end")
spawn("script_entity", 1,16,3, "wentlys_notes")
	:setSource("function activate()\
\
wentlys_note_found = {}\
\
fw.addHooks('party','wentlys_notes', {\
\9onPickUpItem = function(self,item)\
\9\9if item.name == 'wentlys_note' then\
\9\9\9local isfound = false\9\
\9\9\9for id,note in pairs(wentlys_notes.wentlys_note_found) do\
\9\9\9\9if item.id == note then\
\9\9\9\9\9isfound = true\
\9\9\9\9end\
\9\9\9end\
\9\9\9if (not isfound) then\
\9\9\9\9-- wentlys_notes.wentlys_note_found[item.id] = item.id\
\9\9\9\9local n = #wentlys_notes.wentlys_note_found\
\9\9\9\9wentlys_notes.wentlys_note_found[n+1] = item.id\
\9\9\9\9hudPrint(\"New Wently's note found! (\"..#wentlys_notes.wentlys_note_found..\"/\"..wentlys_note_total:getValue()..\")\")\
\9\9\9\9playSound(\"discover_spell\")\
\9\9\9end\
\9\9end\
\9end\
})\
fw.debugPrint(\"Wently's Note counter activated\")\
\
end")
spawn("eob_scroll_detect_magic", 11,18,1, "eob_scroll_detect_magic_1")
spawn("blocker", 8,18,2, "blocker_5")
spawn("blocker", 6,21,3, "blocker_6")
spawn("blocker", 11,26,2, "blocker_8")
spawn("eob_leech", 6,25,0, "eob_leech_3")
spawn("eob_ladder_down", 18,23,1, "eob_ladder_down_2")
spawn("teleporter", 18,23,3, "teleporter_8")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setTeleportTarget(19,23,3,2)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
spawn("eob_sewers_pit_fake", 18,23,3, "eob_sewers_pit_fake_2")
spawn("blocker", 22,9,3, "blocker_9")
spawn("script_entity", 15,1,2, "libObject")
	:setSource("-- Library of helper functions for the objects --\
\
-- returns Item if alcove contains the given item (by name)\
function containsItem(alcove, item_name)\
    if alcove:getItemCount() == 0 then\
\9\9return false\
\9end\
\9for it in alcove:containedItems() do\
      \9if it.name == item_name then\
         \9return it\
      \9end\
   \9end\
   \9return false\
end")
spawn("eob_sewers_wall_pipe", 20,11,2, "eob_sewers_wall_pipe_1")
	:setEntityType("blob")
spawn("eob_sewers_wall_pipe", 20,13,0, "eob_sewers_wall_pipe_2")
	:setEntityType("blob")
spawn("eob_sewers_wall_pipe", 20,23,2, "eob_sewers_wall_pipe_3")
	:setEntityType("blob")
spawn("eob_sewers_wall_pipe", 20,25,0, "eob_sewers_wall_pipe_4")
	:setEntityType("blob")
spawn("eob_sewers_wall_pipe", 6,24,1, "eob_sewers_wall_pipe_5")
	:setEntityType("blob")
spawn("eob_sewers_wall_pipe", 8,24,3, "eob_sewers_wall_pipe_6")
	:setEntityType("blob")
spawn("script_entity", 23,0,2, "eob_spells")
	:setSource("useCasterLevelAsModifier = false\
\
settings = {}\
settings.hold_monster = {}\
settings.hold_monster.level = 5\
settings.hold_monster.duration = 5 --seconds + (skill/2)\9\
settings.hold_monster.immune= {\
\9skeleton_archer=true,\
\9skeleton_warrior=true\
}\
\
settings.magic_missile = {}\
settings.magic_missile.level = 1\
settings.magic_missile.damage = 5 -- damage * (skill / 2)\
\
settings.shield = {}\
settings.shield.level = 1\
settings.shield.duration = 5 --seconds + (skill/2)\
settings.shield.missiles = 6 -- how many damagepoints are subtracted (max value)\
settings.shield.throwing = 8 -- how many damagepoints are subtracted (max value)\
\
settings.burning_hands = {}\
settings.burning_hands.level = 1\
settings.burning_hands.damage = 3 -- damage+skill*2\
\
\
settings.armor = {}\
settings.armor.level = 1\
-- threshold + skill (how much damage champion can get before spell is deactivated)\
settings.armor.threshold = 8 \
settings.armor.protection = 6 -- sets protection stat to this level\
\
settings.invisibility = {}\
settings.invisibility.level = 2\
settings.invisibility_10_radius = {}\
settings.invisibility_10_radius.level = 3\
\
settings.melfs_acid_arrow = {}\
settings.melfs_acid_arrow.level = 2\
settings.melfs_acid_arrow.damage = 8 -- (damage*level/3)\
\
function activate()\
\
\9fw_magic.addSpell('hold_monster',holdMonster)\
\9fw_magic.addSpell('magic_missile',magicMissile)\
\9fw_magic.addSpell('burning_hands',burningHands)\
\9fw_magic.addSpell('shield',shield)\
\9fw_magic.addSpell('armor',armor)\
\9fw_magic.addSpell('invisibility',invisibility)\
\9fw_magic.addSpell('invisibility_10_radius',invisibility_10_radius)\
\9fw_magic.addSpell('melfs_acid_arrow',melfs_acid_arrow)\
\9for _,champ in ipairs(help.getChampions()) do\
\9\9if champ:getClass() == 'Mage' then\
\9\9\9initChampion(champ)\
\9\9end\
\9end\
\9preventPickingUpSpellBook()\9\
\9fw.addHooks('party','eob_spells',{\
\9\9onCastSpell = eob_spells.canCast\
\9\
\9})\
\9fw.addHooks('items_spell_book','eob_spells',{\
\9\9onLearnSpell = eob_spells.learnSpell\
\9})\
end\
\
-- SPELLS ++\
\
-- BURNING HANDS --\
\
function burningHands(caster, x, y, direction, skill)\
\9if (eob_spells.useCasterLevelAsModifier) then skill = caster:getLevel() end\
\9local dx,dy = getForward(direction)\
\9playSoundAt(\"fireburst\",party.level,x,y)\
\9damageTile(party.level, x+dx, y+dy, direction, 0, 'fire', eob_spells.settings.burning_hands.damage+skill*2)\
end\
\
-- SHIELD --\
\
function shield(caster, x, y, direction, skill)\
\9if (eob_spells.useCasterLevelAsModifier and caster.getLevel) then skill = caster:getLevel() end\
\9\
\9local timerId = fw_magic.createSpellTimer(caster,settings.shield.duration+skill/2,{'eob_spells','shieldDestructor'})\
\9playSoundAt(\"fireball_launch\",party.level,x,y)\
\9\
\9fw.addHooks(fw.getId(caster),timerId,{\
\9\9onProjectileHit = function(champion,projectile,damage,damageType)\
\9\9\9if projectile.name == 'magic_missile'  then\
\9\9\9\9hudPrint('Magic missile deflected')\
\9\9\9\9return false\
\9\9\9end\
\9\9\9if help.isEntityType(projectile,'item_missileweapon') then\
\9\9\9\9champion:damage(damage - math.random(eob_spells.settings.shield.missiles), damageType)\
\9\9\9\9hudPrint('Shield spell deflected some damage')\
\9\9\9\9champion:playDamageSound()\
\9\9\9\9return false\
\9\9\9end\
\9\9\9if help.isEntityType(projectile,'item_throwingweapon') then\
\9\9\9\9champion:damage(damage - math.random(eob_spells.settings.shield.throwing), damageType)\
\9\9\9\9hudPrint('Shield spell deflected some damage')\
\9\9\9\9champion:playDamageSound()\
\9\9\9\9return false\
\9\9\9end\9\9\9\
\9\9\
\9\9end\
\9}\
\9)\
end\
\
function shieldDestructor(timer)\
\9fw_magic.spellTimerDestructor(timer)\
\9hudPrint('Effect of shield spell worn out.')\
end\
\
-- MAGIC MISSILE --\
\
function magicMissile(caster, x, y, direction, skill)\
\9\
\9fw.setHookVars('monsters','eob_spells_magic_missile','onProjectileHit',fw.getId(caster))\
\9\
\9fw.addHooks('monsters','eob_spells_magic_missile',{\
\9\9onProjectileHit = function(monster,projectile,damage,damageType)\
\9\9\9if projectile.name == 'magic_missile' then\
\9\9\9\9local caster = fw.getById(fw.getHookVars()) \
\9\9\9\9local originator = 2 ^ (caster:getOrdinal()+1) \
\9\9\9\9local modifier = math.ceil(caster:getLevel()/2)\
\9\9\9\9local damage = math.random(modifier*2,eob_spells.settings.magic_missile.damage * modifier)\9\9\9\9\
\9\9\9\9damageTile(monster.level,monster.x,monster.y,(monster.facing + 2)%4,originator+1, 'physical',damage)\
\9\9\9\9playSoundAt(\"fireball_hit\",monster.level,monster.x,monster.y)\
\9\9\9\9-- remove hook for performance reasons\
\9\9\9\9fw.removeHooks('monsters','eob_spells_magic_missile')\
\9\9\9\9return false\
\9\9\9end\
\9\9end\
\9\9}\
\9)\
\9if caster and caster.getOrdinal then caster = party end\
\9playSoundAt(\"fireball_launch\",party.level,x,y)\
\
\9\
\9shootProjectile('magic_missile', party.level, x, y, direction, 14, 0, 0, 0, 0, 0,\
\9 \0091, caster, true)\
\9\
end\
\
-- HOLD MONSTER --\
\
function holdMonster(caster, x, y, direction, skill)\
\9if (eob_spells.useCasterLevelAsModifier) then skill = caster:getLevel() end\
\9\
\9local holdMonster = function() return false end\
\9\
\9local monster = help.nextEntityAheadOf(party,3,'monster')\
\9if not monster then return false end\
\9if eob_spells.settings.hold_monster.immune[monster.name] then return false end\
\9local timerId = fw_magic.createSpellTimer(monster,eob_spells.settings.hold_monster.duration+(skill/2))\
\9playSoundAt(\"frostbolt_launch\",party.level,party.x,party.y)\
\9\
\9fw.debugPrint(monster.id..' held')\
\9\
\9--dynamically add hooks which prevents monster to attack or move\9\
\9-- use spellId as hook-id so the hook can be removed on destructor\
\9fw.addHooks(monster.id,timerId,{\
\9\9onMove = holdMonster,\
\9\9onAttack = holdMonster,\
\9\9onRangedAttack = holdMonster,\
\9\9onTurn = holdMonster\
\9},\
\0091)\
\9return true\
end\
\
-- ARMOR --\
\
function armor(caster, x, y, direction, skill)\
\9local selector = fw_magic.createTargetSelector()\
\9selector.skill = skill\
\9selector.onSelectChampion = eob_spells.castArmor\
end\
\
 -- MELF'S ACID ARROW ***\
\
function melfs_acid_arrow(caster, x, y, direction, skill)\
\9if (eob_spells.useCasterLevelAsModifier) then skill = caster:getLevel() end\
\
\9playSoundAt(\"fireball_launch\",party.level,x,y)\
\9\
\9-- pass the caster.id to hook\
\9fw.setHookVars('monsters','eob_spells_acid_arrow','onProjectileHit',fw.getId(caster))\
\9\
\9fw.addHooks('monsters','eob_spells_acid_arrow',{\
\9\9onProjectileHit = function(monster,projectile,damage,damageType)\
\9\9\9if projectile.name == 'acid_arrow' then\
\9\9\9\
\9\9\9\9local caster = fw.getById(fw.getHookVars()) \
\
\9\9\9\9\9\9\9\
\9\9\9\9local callback = function(caster_id,target_id)\
\9\9\9\9\9local target = fw.getById(target_id) \
\9\9\9\9\9local caster = fw.getById(caster_id) \
\9\9\9\9\9local originator = 2 ^ (caster:getOrdinal()+1) \
\9\9\9\9\9local modifier = math.ceil(caster:getLevel()/2)\
\9\9\9\9\9local damage = math.random(2,eob_spells.settings.melfs_acid_arrow.damage)\
\9\9\9\9\9\9\9\9\9\
\9\9\9\9\9damageTile(target.level,target.x,target.y,(target.facing + 2)%4,originator+1, 'physical',8)\
\9\9\9\9end\
\9\9\9\9\
\9\9\9\9local attacks = math.ceil(caster:getLevel()/3)\9\
\9\9\9\9\
\9\9\9\9fw.repeatFunction(attacks,1,{fw.getId(caster),fw.getId(monster)},callback,true)\
\9\
\9\9\9\9-- remove hook for performance reasons\
\9\9\9\9fw.removeHooks('monsters','eob_spells_acid_arrow')\
\9\9\9\9return false\
\9\9\9end\
\9\9\9\
\9\9end\
\9})\
\9\
\9shootProjectile('acid_arrow', party.level, x, y, direction, 14, 0, 0, 0, 0, 0,\
\9 \0090, party, true)\
\
end\
\
function castArmor(champion,skill)\
\9if champion:getStat('protection') >= eob_spells.settings.armor.protection then\
\9\9hudPrint('Armor spell has no effect on '..champion:getName())\
\9\9return false\
\9end\
\9\
\9if (eob_spells.useCasterLevelAsModifier and caster.getLevel) then skill = caster:getLevel() end\
\
\9playSoundAt(\"fireball_launch\",party.level,party.x,party.y)\
\9data.set(champion,'spell_armor_orig_protection',champion:getStat('protection'))\
\9data.set(champion,'spell_armor_max_protection',champion:getStatMax('protection'))\9\
\9champion:setStatMax('protection',eob_spells.settings.armor.protection)\
\9champion:setStat('protection',eob_spells.settings.armor.protection)\
\
\9data.set(champion,'spell_armor_damage_threshold',eob_spells.settings.armor.threshold + skill)\
\9\
\9fw.addHooks(fw.getId(champion),'spell_armor',{\
\9\
\9\9onDamage = function(champion,damage)\
\9\9\9local damageThreshold = data.get(champion,'spell_armor_damage_threshold') - damage\
\9\9\9if damageThreshold < 1 then\
\9\9\9\9fw.removeHooks(fw.getId(champion),'spell_armor')\
\9\9\9\9champion:setStat('protection',data.get(champion,'spell_armor_orig_protection'))\
\9\9\9\9champion:setStatMax('protection',data.get(champion,'spell_armor_max_protection'))\
\9\9\9\9hudPrint('Effect of armor spell worn out.')\9\9\9\9\
\9\9\9else\
\9\9\9\9data.set(champion,'spell_armor_damage_threshold',damageThreshold)\
\9\9\9end\
\9\9end\
\9\
\9})\9\
\9\
end\
\
function invisibility(caster, x, y, direction, skill)\
\9local selector = fw_magic.createTargetSelector()\
\9selector.skill = skill\
\9selector.onSelectChampion = eob_spells.castInvisibility\9\
end\
\
function castInvisibility(champion,skill)\
\9champion:setCondition('invisibility',10000)\
\9fw.addHooks(fw.getId(champion),'spell_inivisibility',{\
\9\9onDamage = function(self)\
\9\9\9self:setCondition('invisibility',0)\
\9\9\9fw.removeHooks(fw.getId(self),'spell_inivisibility')\
\9\9end \
\9})\
end\
\
function invisibility_10_radius(caster, x, y, direction, skill)\
\9for i,champ in ipairs(help.getChampions()) do\
\9\9castInvisibility(champ)\
\9end\
end\
\
-- SPELLS --\
\
\
-- SPELL BOOK ++\
\
function spawnSpellBook(champion)\
\9local champId = '_'..champion:getOrdinal()\
\
\9local book = champion:getItem(11)\
\9if book and string.sub(book.name,1,11) == 'spell_book_' then\
\9\9champion:removeItem(11)\
\9\9-- this is the only way to close the container gui if it's opened\
\9\9for c in book:containedItems() do\
\9\9\9champion:insertItem(11,c)\
\9\9\9champion:removeItem(11)\
\9\9end\
\9end\
\9\
\9book = spawn('spell_book_mage',nil,nil,nil,nil,'spell_book_mage'..champId)\
\9\
\9for i=1,5 do \
\9\9local chapter = spawn('spell_book_level_'..i,nil,nil,nil,nil,'spell_book_level'..i..champId)\
\9\9book:addItem(chapter)\
\9\9for spellName,properties in pairs(settings) do\
\9\9\9if properties.level == i then\
\9\9\9\9if data.get(champion,'learnedSpells')[spellName] then\
\9\9\9\9\9chapter:addItem(spawn('spell_book_'..spellName..'_learned',nil,nil,nil,nil,'spell_book_'..spellName..champId))\
\9\9\9\9else\
\9\9\9\9\9chapter:addItem(spawn('spell_book_'..spellName,nil,nil,nil,nil,'spell_book_'..spellName..champId))\9\
\9\9\9\9end\
\9\9\9end\
\9\9end\
\9end\
\9\
\9local item = champion:getItem(11)\
\9if (item) then\
\9\9if string.sub(item.name,1,11) ~= 'spell_book_' then\
\9\9\9setMouseItem(item)\
\9\9end\
\9\9champion:removeItem(11)\
\9end\
\9champion:insertItem(11,book)\9\
\9updateSpellBookDescription(champion)\
end\
\
function updateSpellBookDescription(champ)\
\9local sp = data.get(champ,'spellPoints')\
\9local book = champ:getItem(11)\
\9local description = 'Available spell points\\n'\
\9for level,points in ipairs(sp) do\
\9\9description = description..\"\\nLevel \"..level..\":  \"..points\
\9end\
\9description = description..[[\
\9\
\9You can learn spells by right clicking the \
\9\9desired spell scroll from this book.]]\
\9book:setScrollText(description)\
end\
\
function preventPickingUpSpellBook()\
\9spawn('timer',party.level,0,0,0,'spell_book_timer')\
\9spell_book_timer:setTimerInterval(0.3)\
\9spell_book_timer:addConnector('activate','eob_spells','spellBookScanner')\
\9spell_book_timer:activate()\
end\
\
function canCast(caster,spellName)\
\9if data.get(caster,'learnedSpells')[spellName] then return true end\
\9hudPrint(caster:getName()..\" haven't memorized this spell yet\")\
\9playSound('swipe')\
\9return false\9\
end\
\
function initChampion(champ)\
\9\
\9data.set(champ,'spellPoints',{0,0,0,0,0})\
\9\
\9data.set(champ,'learnedSpells',{})\9\
\9spawnSpellBook(champ)\
\9updateSpellPoints(champ)\
\9fw.addHooks(fw.getId(champ),'eob_spells_level_up',{\
\9\9\9onLevelUp = function(champ)\
\9\9\9\9eob_spells.updateSpellPoints(champ)\
\9\9\9end\
\9\9}\9\
\9)\
end\
\
function updateSpellPoints(champ)\
\9local progressionTable = {\
\9{1},\
\9{1},\
\9{0, 1},\
\9{1, 1},\
\9{1, 0, 1},\
\9{0, 0, 1},\
\9{0, 1, 0, 1},\
\9{0, 0, 1, 1},\
\9{0, 0, 0, 0, 1},\
\9{0, 1, 0, 0, 1},\
\9{0, 0, 1, 1, 1},\
\9{0, 0, 0, 1, 1},\
\9{1, 1, 1, 0, 0},\
\9{0, 0, 0, 1, 1},\
}\
\9local spellPoints = data.get(champ,'spellPoints')\
\9for spellLevel,points in ipairs(progressionTable[champ:getLevel()]) do\
\9\9spellPoints[spellLevel] = points + (spellPoints[spellLevel] or 0)\
\9end\
\9\
\9data.set(champ,'spellPoints',spellPoints)\
\9updateSpellBookDescription(champ)\
end\
\
function spellBookScanner()\
\9local mouseItem = getMouseItem()\
\
\9local book = findEntity('spell_book_mage_4')\
\9-- respawn spell book if it is in dungeon or \
\9-- the book or any of it pages is set as mouse item\
\9if book or (mouseItem and string.sub(mouseItem.name,1,11) == 'spell_book_') then\
\9\9if book then\
\9\9\9book:destroy()\
\9\9end\9\
\9\9setMouseItem()\
\9\9\
\9\9spawnSpellBook(party:getChampion(4))\
\9end\
\9\
end\
\
function learnSpell(scroll,champion)\
\9local spellName = string.sub(scroll.name,12)\
\9local sp = data.get(champion,'spellPoints')\
\9local sl = eob_spells.settings[spellName].level\
\9if (sp[sl] < 1) then\
\9\9hudPrint('Not enough spell points')\
\9\9return false\
\9end\
\9sp[sl] = sp[sl] - 1\
\9data.set(champion,'spellPoints',sp)\
\9local spells = data.get(champion,'learnedSpells')\
\9spells[spellName] = true\
\9data.set(champion,'learnedSpells',spells)\
\9hudPrint('Learned a new spell: '..scroll:getUIName())\
\9playSound('discover_spell')\
\9eob_spells.updateSpellBookDescription(champion)\
\9return true\
end\
")
spawn("script_entity", 22,0,0, "fw_magic")
	:setSource("\9\
activeSpells = {}\
selector = {\
\9skill = 0,\
\9onSelectChampion = nil\
}\
\
function addSpell(spellName,hookFunction)\
\9fw.addHooks(spellName,'fw_spells',{\
\9\9\9onCast = hookFunction\
\9\9}\
\9)\
end\
\
\
function createTargetSelector()\
\9if inventory_scanner then\
\9\9destroyTargetSelector()\9\
\9end\
\9local selectorCursor = spawn('spell_selector',nil,nil,nil,nil,'spell_selector')\
\9setMouseItem(selectorCursor)\
\9spawn('timer',party.level,0,0,0,'inventory_scanner')\
\9inventory_scanner:setTimerInterval(0.1)\
\9inventory_scanner:addConnector('activate','fw_magic','scanInventory')\
\9inventory_scanner:activate()\
\9return selector\
end\
\
function destroyTargetSelector()\
\9\9local selectorCursor = findEntity('spell_selector')\
\9\9if (selectorCursor) then\
\9\9\9selectorCursor:destroy()\
\9\9end\
\9\9inventory_scanner:deactivate()\
\9\9inventory_scanner:destroy()\9\
end\
\
function scanInventory()\
\9\
\9for ordinal, champ in ipairs(help.getChampions()) do\
\9\9for slot=1,31 do \
\9\9\9local item = champ:getItem(slot)\
\9\9\9if item and item.name == 'spell_selector' then\
\9\9\9\9champ:removeItem(slot)\
\9\9\9\9selector.onSelectChampion(champ,selector.skill)\
\9\9\9\9if (getMouseItem() and getMouseItem().name == 'spell_selector') then\
\9\9\9\9\9setMouseItem()\
\9\9\9\9elseif getMouseItem() then\
\9\9\9\9\9champ:insertItem(slot,getMouseItem())\
\9\9\9\9\9setMouseItem()\
\9\9\9\9end\
\9\9\9\9item:destroy()\
\9\9\9\9break\
\9\9\9end\
\9\9end\
\9end\
\9if getMouseItem() == nil or getMouseItem().name ~= 'spell_selector' then\
\9\9destroyTargetSelector()\9\
\9end\
end\
\
-- creates a  spell timer\
-- entity = affected entity, \
-- time = how many seconds spells effect  lasts \
-- destructorName = name of the function which is called when the effect of the spell is worn out.\
--                  {script_entity_name,function_name}\
-- returns id of timer\
function createSpellTimer(entity,time,destructorName)\
\9local timer = spawn('timer',party.level,0,0,0)\
\9timer:setTimerInterval(time)\
\9-- store entity.id to table indexed by timer.id so we can access it in spell-destructor\
\9activeSpells[timer.id] = fw.getId(entity)\
\9\
\9if (not destructorName) then\
\9\9destructorName = {'fw_magic','spellTimerDestructor'}\
\9end\
\9\
\9timer:addConnector('activate',destructorName[1],destructorName[2])\
\9timer:activate()\
\9return timer.id\
end\
\
function spellTimerDestructor(timer)\
\9fw.removeHooks(fw_magic.activeSpells[timer.id],timer.id)\
\9fw.debugPrint(fw_magic.activeSpells[timer.id]..' spell effect ended')\
\9fw_magic.activeSpells[timer.id] = nil\
\9timer:deactivate()\
\9timer:destroy()\
\
end\
")
spawn("eob_sewers_wall_text_long", 6,15,0, "eob_sewers_wall_text_long_14")
	:setWallText("Teleport to Level 3")
spawn("teleporter", 6,16,1, "teleporter_11")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setTeleportTarget(26,4,1,3)
spawn("script_entity", 8,14,1, "script_entity_11")
	:setSource("function levelUp()\
\9party:getChampion(4):levelUp()\
end")
spawn("eob_sewers_wall_text_long", 8,15,0, "eob_sewers_wall_text_long_13")
	:setWallText("Level UP button for character in slot 4 (default mage).\
This is feature to testing AD&D Spells")
spawn("eob_wall_button", 8,15,0, "eob_wall_button_13")
	:addConnector("toggle", "script_entity_11", "levelUp")
spawn("starting_location", 10,15,0, "starting_location_1")

--- level 2 ---

mapName("Middle Sewer Level")
setWallSet("sewers")
playStream("assets/samples/music/dungeon_ambient.ogg")
mapDesc([[
################################
################################
###..#...######.....############
#........#...###.#.#......######
###..##.##.#...#.#...#..#.#..###
#........#...#.....##.....##.###
###..#...#.#..#.##....#.##...###
######...#.###.....#.#...#.#.###
##.#######.#...#.#.#...#...#.###
##.##..###.#.##....###...##..###
#......###.#....###...#.####.###
#...#..##....#....#...##.....###
##.#####..#.#..##.##.#...#######
##.......#...#.....#.#...#....##
#####.####.#...#.#.#.#..##.#..##
###..#...#...#...#.#.###...#.###
###....#..#######....#.....#..##
########..#.......####.#...#..##
####.#....#.#######....#########
####.###..#.#...###.#.#.....####
###....####.#.......#.#.#.#.####
#....####...#...###.#.#.....####
###....####.##.####.##.#.#.#####
###..####....#...#.......#.#####
#......#..######.##.##.##..#####
###.#####.#.......#.########...#
###.####..#.#.#####.##.....#...#
###..###.##...#........#...###.#
#......#....###.###.##...#.....#
#.#...####..##..###.##.....#####
##....#.....##..###...##########
################################
]])
spawn("script_entity", 1,1,2, "script_entity_2")
	:setSource("-- Base scripts for Level 2 --\
\
function TeleportR1()\
\9teleporter_3:setTeleportTarget(25, 29, (party.facing + 2)%4)\
end\
function TeleportR2()\
\9teleporter_2:setTeleportTarget(25, 26, (party.facing + 2)%4)\
end\
\
-- creates Illusionary Wall at 20,30\
function IluWall1()\
\9spawn(\"eob_sewers_illusion_wall\", 2, 20, 30, 1, \"illusion_wall_2_20_30_1\")\
\9spawn(\"eob_sewers_illusion_wall\", 2, 20, 30, 3, \"illusion_wall_2_20_30_3\")\
\9playSound(\"laugh_human_male_echo\")\
\9hudPrint(texts.getT(\"hollow_laughter\"))\
\9teleporter_4:setTeleportTarget(party.x, party.y, (party.facing + 1)%4)\
\9timer_1:activate()\
end\
function Teleport4Deact()\
\9teleporter_4:deactivate()\
\9timer_1:deactivate()\
end\
\
function MessageDeadEnd()\
\9if texts.getT(\"dead_end_show\") == \"yes\" then \
\9\9hudPrint(texts.getT(\"dead_end\"))\
\9\9texts.setT(\"dead_end_show\",\"no\")\
\9end\
end\
\
function DoorStuckOpen() \
\9if texts.getT(\"door_appears_stuck_pressed\") == \"no\" then\
\9\9eob_sewers_door_metal_stucked:open()\
\9\9timer_2:activate()\
\9end\
end\
function DoorStuckClose()\
\9if texts.getT(\"door_appears_stuck_pressed\") == \"no\" then\
\9\9texts.setT(\"door_appears_stuck_pressed\",\"yes\")\
\9\9hudPrint(texts.getT(\"door_appears_stuck\"))\
\9end\
\9eob_sewers_door_metal_stucked:close()\
\9timer_2:deactivate()\
end\
\
function SpecialQuest2(sender)\
\9if sender:getItemCount() == 0 then\
\9\9setMouseItem(nil)\
\9\9sender:addItem(spawn(\"eob_dagger\"))\
\9\9return false\
\9end\
\9if data.get(sender, \"activated\") then\
\9\9hudPrint(texts.getT(\"dagger_undetachable\"))\
\9\9return false\
\9end\
\9counter_sq2:increment()\
\9data.set(sender, \"activated\", true)\
\9playSound(\"key_lock\")\
\9fw.debugPrint(sender.id..\" is activated\")\
\9-- option for open door by insert dagger in carving\
\9if sender.id == \"eob_sewers_alcove_dagger_1\" and door_throwable_3.getState() == \"closed\" then\
\9\9door_throwable_3.open()\
\9end\
\9-- option for open door by insert dagger in carving\
\9if sender.id == \"eob_sewers_alcove_dagger_5\" and door_throwable_4.getState() == \"closed\" then\
\9\9door_throwable_4.open()\
\9end\
\9local dagger = libObject.containsItem(sender, \"eob_dagger\")\
\9if dagger:getStackSize()>1 then\
\9\9spawn(\"eob_dagger\", party.level, party.x, party.y, party.facing):setStackSize(dagger:getStackSize()-1)\
\9\9dagger:setStackSize(1)\
\9end\
\9if (counter_sq2:getValue() > 0 and counter_sq2:getValue() < 4) then\
\9\9hudPrint(texts.getT(\"dagger_fits\"))\
\9else\
\9\9hudPrint(texts.getT(\"special_quest_for_this_level\"))\
\9\9secret_sq2:activate()\
\9\9spawn(\"eob_rations\", party.level, party.x, party.y, party.facing)\
\9end\
end\
\
\
spawn(\"eob_sewers_wall_text_rune2\", 2, 17, 27, 3, \"walltext_rune2_01\")\
walltext_rune2_01:setWallText(texts.getT(\"look_like_travel_marker\"))\
\
eob_sewers_wall_text_long_1:setWallText(texts.getT(\"not_all_is_as_it_appears\"))\
eob_sewers_wall_text_long_2:setWallText(texts.getT(\"watch_your_step\"))\
eob_sewers_wall_text_long_strength:setWallText(texts.getT(\"only_the_strong\"))\
-- eob_sewers_wall_text_carving_1:setWallText(texts.getT(\"carving_to_place\"))\
-- eob_sewers_wall_text_carving_2:setWallText(texts.getT(\"carving_to_place\"))\
-- eob_sewers_wall_text_carving_3:setWallText(texts.getT(\"carving_to_place\"))\
")
spawn("eob_sewers_door_metal", 19,24,2, "dungeon_door_metal_11")
spawn("eob_sewers_door_metal", 19,22,0, "dungeon_door_metal_12")
spawn("eob_sewers_door_metal", 20,23,1, "dungeon_door_metal_13")
spawn("eob_lock_silver", 19,24,1, "eob_lock_silver_1")
	:setOpenedBy("eob_silver_key")
	:addConnector("activate", "dungeon_door_metal_11", "open")
spawn("eob_lock_silver", 20,23,0, "eob_lock_silver_2")
	:setOpenedBy("eob_silver_key")
	:addConnector("activate", "dungeon_door_metal_13", "open")
spawn("eob_lock_silver", 19,22,3, "eob_lock_silver_3")
	:setOpenedBy("eob_silver_key")
	:addConnector("activate", "dungeon_door_metal_12", "open")
spawn("eob_silver_key", 19,23,1, "eob_silver_key_1")
spawn("eob_sling", 19,28,3, "eob_sling_1")
spawn("eob_sewers_pressure_plate", 21,30,3, "eob_sewers_pressure_plate_8")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setActivateOnce(true)
	:addConnector("activate", "script_entity_2", "IluWall1")
spawn("eob_rock", 21,30,0, "eob_rock_3")
spawn("eob_sewers_alcove", 28,28,2, "eob_sewers_alcove_3")
	:addItem(spawn("eob_rations"))
	:addItem(spawn("eob_silver_key"))
	:addConnector("any", "script_entity_3", "AlcoveDoors")
spawn("eob_rations", 28,26,2, "eob_rations_1")
spawn("eob_arrow", 30,28,1, "eob_arrow_1")
spawn("eob_arrow", 30,28,2, "eob_arrow_2")
spawn("eob_sewers_pillar", 23,29,1, "eob_sewers_pillar_1")
spawn("eob_sewers_pillar", 24,29,1, "eob_sewers_pillar_2")
spawn("eob_sewers_pillar", 25,27,0, "eob_sewers_pillar_3")
spawn("eob_sewers_pillar", 26,27,2, "eob_sewers_pillar_4")
spawn("eob_sewers_wall_text_long", 19,26,1, "eob_sewers_wall_text_long_1")
	:setWallText("Not all is as it appears")
spawn("teleporter", 21,30,2, "teleporter_4")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setTeleportTarget(21,30,2,2)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
spawn("timer", 22,30,3, "timer_1")
	:setTimerInterval(1)
	:addConnector("activate", "script_entity_2", "Teleport4Deact")
spawn("pressure_plate_hidden", 17,27,1, "pressure_plate_hidden_9")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setSilent(true)
	:addConnector("activate", "script_entity_2", "MessageDeadEnd")
spawn("blocker", 15,29,3, "blocker_1")
spawn("eob_scroll_shield", 15,27,3, "eob_scroll_shield_1")
spawn("eob_zombie", 14,29,1, "eob_zombie_1")
spawn("eob_zombie", 14,30,1, "eob_zombie_2")
spawn("eob_zombie", 29,13,3, "eob_zombie_3")
spawn("eob_zombie", 4,15,2, "eob_zombie_4")
spawn("eob_zombie", 5,16,1, "eob_zombie_5")
spawn("eob_zombie", 3,16,1, "eob_zombie_6")
spawn("eob_zombie", 6,10,3, "eob_zombie_7")
spawn("eob_zombie", 6,9,3, "eob_zombie_8")
spawn("eob_zombie", 12,13,2, "eob_zombie_9")
spawn("eob_zombie", 14,13,2, "eob_zombie_10")
spawn("eob_zombie", 19,6,1, "eob_zombie_11")
spawn("eob_skeleton", 21,21,0, "eob_skeleton_1")
spawn("eob_skeleton", 4,18,2, "eob_skeleton_2")
spawn("eob_skeleton", 16,7,2, "eob_skeleton_3")
spawn("eob_skeleton", 6,22,3, "eob_skeleton_4")
	:addItem(spawn("leather_cap"))
spawn("eob_skeleton", 6,24,3, "eob_skeleton_5")
spawn("eob_skeleton", 3,26,0, "eob_skeleton_6")
spawn("eob_skeleton", 1,24,1, "eob_skeleton_7")
spawn("eob_skeleton", 6,20,3, "eob_skeleton_8")
spawn("eob_skeleton", 23,4,2, "eob_skeleton_9")
spawn("eob_skeleton_g4", 2,8,2, "eob_skeleton_g4_1")
spawn("counter", 17,30,2, "counter_sq2")
spawn("eob_sewers_wall_text_long", 22,24,3, "eob_sewers_wall_text_long_2")
	:setWallText("Watch your step")
spawn("teleporter", 23,23,1, "teleporter_pit_1")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setTeleportTarget(2,30,1,2)
	:setChangeFacing(false)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
spawn("eob_lever", 22,24,1, "eob_lever_3")
	:addConnector("any", "script_illusion_pit", "toggle")
spawn("teleporter", 24,22,1, "teleporter_pit_2")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setTeleportTarget(3,29,1,2)
	:setChangeFacing(false)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
spawn("eob_sewers_pressure_plate", 24,21,2, "eob_sewers_pressure_plate_3")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(true)
	:addConnector("any", "script_entity_5", "toggle")
spawn("teleporter", 22,22,2, "teleporter_5")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(true)
	:setTeleportTarget(1,28,2,2)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
spawn("teleporter", 1,29,0, "teleporter_6")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setTeleportTarget(22,23,0,2)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
spawn("eob_sewers_ceiling_shaft", 2,30,2, "eob_sewers_ceiling_shaft_2")
spawn("eob_sewers_ceiling_shaft", 3,29,2, "eob_sewers_ceiling_shaft_3")
spawn("teleporter", 23,21,0, "teleporter_pit_6")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setTeleportTarget(2,28,0,2)
	:setChangeFacing(false)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
spawn("teleporter", 25,20,1, "teleporter_pit_5")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setTeleportTarget(4,27,1,2)
	:setChangeFacing(false)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
spawn("teleporter", 26,23,3, "teleporter_pit_3")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setTeleportTarget(5,30,3,2)
	:setChangeFacing(false)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
spawn("teleporter", 27,21,0, "teleporter_pit_4")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setTeleportTarget(6,28,0,2)
	:setChangeFacing(false)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
	:deactivate()
spawn("eob_wall_button", 26,22,3, "eob_wall_button_4")
	:addConnector("toggle", "script_entity_6", "toggle")
	:addConnector("toggle", "script_entity_7", "toggle")
spawn("eob_sewers_ceiling_shaft", 5,30,2, "eob_sewers_ceiling_shaft_5")
spawn("eob_sewers_ceiling_shaft", 2,28,2, "eob_sewers_ceiling_shaft_6")
spawn("eob_sewers_ceiling_shaft", 6,28,2, "eob_sewers_ceiling_shaft_7")
spawn("eob_sewers_ceiling_shaft", 4,27,2, "eob_sewers_ceiling_shaft_8")
spawn("teleporter", 25,21,0, "teleporter_pit_7")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setTeleportTarget(4,28,0,2)
	:setChangeFacing(false)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
	:deactivate()
spawn("eob_sewers_ceiling_shaft", 4,28,2, "eob_sewers_ceiling_shaft_9")
spawn("eob_sewers_pressure_plate", 27,20,1, "eob_sewers_pressure_plate_4")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:addConnector("activate", "script_entity_8", "toggle")
spawn("eob_rations", 25,24,3, "eob_rations_5")
spawn("eob_sewers_alcove", 23,19,0, "eob_sewers_alcove_1")
	:addItem(spawn("eob_rations"))
	:addItem(spawn("eob_silver_key"))
	:addConnector("deactivate", "script_entity_3", "AlcoveDoors")
spawn("eob_wall_button", 19,19,1, "eob_wall_button_5")
	:addConnector("toggle", "script_entity_2", "DoorStuckOpen")
spawn("eob_sewers_wall_text_long", 19,20,1, "eob_sewers_wall_text_long_strength")
	:setWallText("")
spawn("timer", 20,19,3, "timer_2")
	:setTimerInterval(0.5)
	:addConnector("activate", "script_entity_2", "DoorStuckClose")
spawn("eob_potion_healing", 2,30,3, "eob_potion_healing_1")
spawn("eob_potion_vitality", 21,21,2, "eob_potion_vitality_1")
spawn("sewers_fog", 24,23,1, "sewers_fog_9")
spawn("sewers_fog", 25,19,0, "sewers_fog_10")
spawn("sewers_fog", 19,27,3, "sewers_fog_11")
spawn("floor_dirt", 24,19,3, "floor_dirt_17")
spawn("floor_dirt", 26,24,3, "floor_dirt_26")
spawn("floor_dirt", 14,30,2, "floor_dirt_27")
spawn("floor_dirt", 21,27,3, "floor_dirt_28")
spawn("floor_dirt", 26,29,1, "floor_dirt_29")
spawn("floor_dirt", 26,26,1, "floor_dirt_30")
spawn("floor_dirt", 30,25,2, "floor_dirt_31")
spawn("dungeon_ivy_1", 28,25,0, "dungeon_ivy_1_13")
spawn("dungeon_ivy_2", 30,25,1, "dungeon_ivy_2_6")
spawn("dungeon_ivy_2", 15,30,2, "dungeon_ivy_2_7")
spawn("dungeon_ivy_2", 23,20,3, "dungeon_ivy_2_8")
spawn("sewers_fog", 22,18,1, "sewers_fog_12")
spawn("eob_sewers_secret_button", 25,15,0, "eob_sewers_secret_button_2")
	:addConnector("toggle", "eob_sewers_secret_door_1", "open")
spawn("eob_sewers_alcove", 29,17,1, "eob_sewers_alcove_2")
	:addItem(spawn("eob_silver_key"))
	:addItem(spawn("eob_rations"))
	:addItem(spawn("eob_potion_giant_strength"))
	:addConnector("any", "script_entity_3", "AlcoveDoors")
spawn("eob_sewers_illusion_wall_rune", 22,28,1, "eob_sewers_illusion_wall_rune_1")
spawn("eob_sewers_illusion_wall_rune", 23,28,2, "eob_sewers_illusion_wall_rune_2")
spawn("eob_sewers_illusion_wall_rune", 24,28,3, "eob_sewers_illusion_wall_rune_3")
spawn("eob_sewers_illusion_wall_rune", 25,27,3, "eob_sewers_illusion_wall_rune_4")
spawn("eob_sewers_illusion_wall_rune", 25,26,2, "eob_sewers_illusion_wall_rune_5")
spawn("eob_sewers_illusion_wall_rune", 25,27,1, "eob_sewers_illusion_wall_rune_6")
spawn("eob_sewers_illusion_wall_rune", 28,28,1, "eob_sewers_illusion_wall_rune_7")
spawn("eob_sewers_illusion_wall_rune", 29,28,1, "eob_sewers_illusion_wall_rune_8")
spawn("eob_sewers_illusion_wall_rune", 30,28,0, "eob_sewers_illusion_wall_rune_9")
spawn("eob_sewers_illusion_wall_rune", 30,27,0, "eob_sewers_illusion_wall_rune_10")
spawn("eob_sewers_illusion_wall_rune", 16,27,1, "eob_sewers_illusion_wall_rune_11")
spawn("eob_sewers_illusion_wall_rune", 15,27,1, "eob_sewers_illusion_wall_rune_12")
spawn("eob_sewers_illusion_wall_rune", 15,27,2, "eob_sewers_illusion_wall_rune_13")
spawn("eob_sewers_illusion_wall", 15,28,2, "eob_sewers_illusion_wall_1")
spawn("dungeon_ceiling_root_1", 17,27,2, "dungeon_ceiling_root_1_1")
spawn("floor_dirt", 18,27,2, "floor_dirt_32")
spawn("teleporter_rotator90", 19,27,3, "teleporter_rotator90_1")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setTeleportTarget(19,27,3,2)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
spawn("dungeon_wall_dirt_1", 19,30,2, "dungeon_wall_dirt_1_1")
spawn("dungeon_ceiling_root_1", 19,30,3, "dungeon_ceiling_root_1_2")
spawn("script_entity", 23,23,1, "script_illusion_pit")
	:setSource("function toggle()\
\9illusion_pits.toggle(self)\
end")
spawn("eob_sewers_pit_illusion_on", 23,23,3, "eob_sewers_pit_illusion_on_1")
spawn("eob_sewers_pit_illusion_on", 24,22,2, "eob_sewers_pit_illusion_on_2")
spawn("script_entity", 24,22,1, "script_entity_5")
	:setSource("function toggle()\
\9illusion_pits.toggle(self)\
end")
spawn("eob_sewers_pit_illusion_on", 23,21,0, "eob_sewers_pit_illusion_on_3")
spawn("script_entity", 25,21,1, "script_entity_6")
	:setSource("function toggle()\
\9illusion_pits.toggle(self)\
end")
spawn("script_entity", 26,23,1, "script_entity_7")
	:setSource("function toggle()\
\9illusion_pits.toggle(self)\
end")
spawn("eob_sewers_pit_illusion_on", 26,23,2, "eob_sewers_pit_illusion_on_4")
spawn("eob_sewers_pit_illusion_off", 25,21,2, "eob_sewers_pit_illusion_off_1")
spawn("script_entity", 27,21,1, "script_entity_8")
	:setSource("function toggle()\
\9illusion_pits.toggle(self)\
end")
spawn("eob_sewers_pit_illusion_off", 27,21,0, "eob_sewers_pit_illusion_off_2")
spawn("eob_sewers_pit_illusion_on", 25,20,3, "eob_sewers_pit_illusion_on_5")
spawn("floor_dirt", 26,17,1, "floor_dirt_33")
spawn("dungeon_ivy_2", 26,17,1, "dungeon_ivy_2_9")
spawn("sewers_fog", 28,14,1, "sewers_fog_13")
spawn("floor_dirt", 29,14,0, "floor_dirt_34")
spawn("floor_dirt", 28,17,1, "floor_dirt_35")
spawn("dungeon_ivy_1", 29,13,1, "dungeon_ivy_1_15")
spawn("dungeon_ivy_2", 28,17,2, "dungeon_ivy_2_10")
spawn("dungeon_ivy_1", 26,29,1, "dungeon_ivy_1_16")
spawn("dungeon_ivy_1", 22,26,3, "dungeon_ivy_1_17")
spawn("eob_sewers_secret_door", 18,20,1, "eob_sewers_secret_door_a1")
spawn("eob_sewers_secret_door", 17,20,1, "eob_sewers_secret_door_a2")
spawn("eob_sewers_secret_door", 16,20,1, "eob_sewers_secret_door_a3")
spawn("script_entity", 29,19,2, "script_entity_3")
	:setSource("-- open secret door if alcove is empty\
function AlcoveDoors()\
\9for i=1,3 do\
\9\9local alcove = findEntity(\"eob_sewers_alcove_\"..i)\
\9\9if alcove:getItemCount() == 0 then\
\9\9\9local sd = findEntity(\"eob_sewers_secret_door_a\"..i)\
\9\9\9sd:open()\
\9\9\9fw.debugPrint(\"Secret door opened: \"..sd.id)\
\9\9end\
\9end\
end\
")
spawn("eob_stone_dagger", 13,21,2, "eob_stone_dagger_1")
spawn("sewers_fog", 14,20,2, "sewers_fog_14")
spawn("dungeon_ivy_2", 13,19,0, "dungeon_ivy_2_11")
spawn("dungeon_ivy_1", 15,21,2, "dungeon_ivy_1_18")
spawn("dungeon_ivy_1", 12,25,2, "dungeon_ivy_1_19")
spawn("dungeon_ivy_2", 11,27,3, "dungeon_ivy_2_12")
spawn("sewers_fog", 11,28,0, "sewers_fog_15")
spawn("floor_dirt", 11,25,1, "floor_dirt_36")
spawn("floor_dirt", 17,25,3, "floor_dirt_37")
spawn("dungeon_ceiling_root_3", 17,25,0, "dungeon_ceiling_root_3_2")
spawn("dungeon_ceiling_root_2", 17,25,1, "dungeon_ceiling_root_2_2")
spawn("dungeon_ceiling_root_2", 11,30,2, "dungeon_ceiling_root_2_3")
spawn("dungeon_ceiling_root_1", 8,28,3, "dungeon_ceiling_root_1_3")
spawn("eob_sewers_pressure_plate", 7,30,1, "eob_sewers_pressure_plate_5")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setActivateOnce(true)
	:addConnector("activate", "door_throwable_4", "open")
spawn("eob_potion_healing_extra", 8,30,3, "eob_potion_healing_extra_1")
spawn("eob_rations", 8,30,0, "eob_rations_6")
spawn("dungeon_ivy_2", 8,26,0, "dungeon_ivy_2_13")
spawn("secret", 9,29,2, "secret_sq2")
spawn("eob_teleporter_rats", 8,24,1, "eob_teleporter_rats_1")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setTeleportTarget(28,9,1,2)
spawn("eob_sewers_wall_text_long", 9,25,3, "eob_sewers_wall_text_long_4")
	:setWallText("R.A.T.S.")
spawn("eob_sewers_wall_drainage", 12,23,1, "eob_sewers_wall_drainage_1")
spawn("eob_sewers_wall_drainage", 26,24,2, "eob_sewers_wall_drainage_10")
spawn("eob_sewers_wall_drainage", 26,26,0, "eob_sewers_wall_drainage_11")
spawn("eob_sewers_wall_drainage", 14,23,3, "eob_sewers_wall_drainage_12")
spawn("eob_sewers_wall_drainage", 15,27,0, "eob_sewers_wall_drainage_13")
spawn("eob_sewers_wall_drainage", 15,25,2, "eob_sewers_wall_drainage_14")
spawn("eob_sewers_wall_drainage", 11,17,0, "eob_sewers_wall_drainage_15")
spawn("eob_sewers_wall_drainage", 11,15,2, "eob_sewers_wall_drainage_16")
spawn("eob_leather_boots", 19,10,0, "eob_leather_boots_1")
spawn("eob_rations", 19,10,3, "eob_rations_7")
spawn("eob_sewers_door_metal", 20,12,0, "eob_sewers_door_metal_2")
spawn("eob_lock_silver", 20,12,1, "eob_lock_silver_4")
	:setOpenedBy("eob_silver_key")
	:addConnector("activate", "eob_sewers_door_metal_2", "open")
spawn("eob_wall_button", 9,21,3, "eob_wall_button_6")
	:addConnector("toggle", "elevator_room", "Button1")
spawn("pressure_plate_hidden", 23,26,2, "pressure_plate_hidden_3")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setSilent(true)
	:addConnector("activate", "script_entity_2", "TeleportR1")
spawn("teleporter", 23,26,0, "teleporter_3")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setTeleportTarget(25,29,0,2)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
spawn("pressure_plate_hidden", 23,29,2, "pressure_plate_hidden_8")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setSilent(true)
	:addConnector("activate", "script_entity_2", "TeleportR2")
spawn("teleporter", 23,29,0, "teleporter_2")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setTeleportTarget(25,26,0,2)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
spawn("sewers_fog", 4,29,3, "sewers_fog_16")
spawn("eob_sewers_door_metal", 10,21,3, "elevator_door_1")
spawn("script_entity", 7,21,1, "elevator_room")
	:setSource("function PressButton(btn)\
\9local timer = findEntity(\"elevator_timer\")\
\9if (timer) then\
\9\9if timer:isActivated() then\
\9\9\9return\
\9\9end\
\9end\
\9local edoor = findEntity(\"elevator_door_\"..btn)\
\9if edoor:isOpen() then\
\9\9edoor:close()\
\9\9return \
\9else\
\9\9hudPrint(texts.getT(\"room_move\"))\
\9\9if (not timer) then\
\9\9\9timer = spawn(\"timer\", self.level, self.x, self.y, self.facing, \"elevator_timer\")\
\9\9\9timer:setTimerInterval(5.8)\
\9\9\9timer:addConnector(\"activate\",\"elevator_room\",\"MoveFrom\"..btn)\
\9\9end\
\9\9playSound(\"wall_sliding\")\
\9\9party:shakeCamera(0.5,0.5)\
\9\9elevator_timer:activate()\
\9end\
end\
\
-- move room: lvl (level number 1/2/3), dto (door to open 1/2/3)\
function MoveRoom(lvl,dto)\
\9elevator_timer:deactivate()\
\9elevator_timer:destroy()\
\9local eteleporter = findEntity(\"elevator_teleporter_\"..lvl)\
\9eteleporter:activate()\
\9local timer2 = findEntity(\"elevator_timer2\")\
\9if (not timer2) then\
\9\9timer2 = spawn(\"timer\", self.level, self.x, self.y, self.facing, \"elevator_timer2\")\
\9\9timer2:setTimerInterval(0.1)\
\9\9timer2:addConnector(\"activate\",\"elevator_room\",\"DeactivateTeleporters\")\
\9end\
\9elevator_timer2:activate()\
\9local edoor = findEntity(\"elevator_door_\"..dto)\
\9edoor:open()\
end\
\
function DeactivateTeleporters()\
\9playSound(\"party_land\")\
\9party:shakeCamera(0.3,0.3)\
\9elevator_timer2:deactivate()\
\9elevator_teleporter_1:deactivate()\
\9elevator_teleporter_2:deactivate()\
\9elevator_teleporter_3:deactivate()\
end\
\
function MoveFrom1()\
\9elevator_room.MoveRoom(1,2)\
end\
\
function Button1()\
\9elevator_room.PressButton(1)\
end\
\
function MoveFrom2()\
\9elevator_room.MoveRoom(2,3)\
end\
\
function Button2()\
\9elevator_room.PressButton(2)\
end\
\
function MoveFrom3()\
\9elevator_room.MoveRoom(3,1)\
end\
\
function Button3()\
\9elevator_room.PressButton(3)\
end")
spawn("teleporter", 9,21,0, "elevator_teleporter_1")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setTeleportTarget(1,21,0,2)
	:setChangeFacing(false)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
	:deactivate()
spawn("eob_sewers_door_metal", 2,21,3, "elevator_door_2")
spawn("eob_sewers_wall_text_long", 1,21,2, "eob_sewers_wall_text_long_7")
	:setWallText("Correction Facility.")
spawn("eob_wall_button", 10,21,0, "eob_wall_button_7")
	:addConnector("toggle", "elevator_door_1", "open")
spawn("eob_wall_button", 2,21,0, "eob_wall_button_8")
	:addConnector("toggle", "elevator_door_2", "open")
spawn("teleporter", 1,21,0, "elevator_teleporter_2")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setTeleportTarget(6,18,0,2)
	:setChangeFacing(false)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
	:deactivate()
spawn("teleporter", 6,18,0, "elevator_teleporter_3")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setTeleportTarget(9,21,0,2)
	:setChangeFacing(false)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
	:deactivate()
spawn("eob_sewers_door_metal", 7,18,3, "elevator_door_3")
spawn("eob_wall_button", 7,18,0, "eob_wall_button_9")
	:addConnector("toggle", "elevator_door_3", "open")
spawn("eob_wall_button", 1,21,3, "eob_wall_button_10")
	:addConnector("toggle", "elevator_room", "Button2")
spawn("eob_wall_button", 6,18,3, "eob_wall_button_11")
	:addConnector("toggle", "elevator_room", "Button3")
spawn("eob_sewers_wall_text_long", 6,18,2, "eob_sewers_wall_text_long_8")
	:setWallText("Death section")
spawn("eob_sewers_door_metal", 2,24,3, "eob_sewers_door_metal_3")
	:addPullChain()
spawn("eob_sewers_door_metal", 3,26,0, "eob_sewers_door_metal_4")
	:addPullChain()
spawn("eob_sewers_door_metal", 5,24,1, "eob_sewers_door_metal_5")
	:addPullChain()
spawn("eob_sewers_door_metal", 6,22,3, "eob_sewers_door_metal_6")
	:addPullChain()
spawn("eob_sewers_door_metal", 6,20,3, "eob_sewers_door_metal_7")
	:addPullChain()
spawn("eob_sewers_door_metal", 4,19,0, "eob_sewers_door_metal_8")
	:addPullChain()
spawn("eob_bow", 6,20,2, "eob_bow_1")
spawn("eob_scroll_invisibility", 6,24,2, "eob_scroll_invisibility_1")
	:setScrollText("")
spawn("eob_sewers_secret_button", 3,26,3, "eob_sewers_secret_button_3")
	:addConnector("toggle", "eob_sewers_secret_door_3", "open")
	:addConnector("toggle", "eob_sewers_secret_door_4", "open")
	:addConnector("toggle", "eob_sewers_secret_door_2", "open")
	:addConnector("toggle", "secret_4", "activate")
spawn("eob_sewers_secret_door", 3,28,0, "eob_sewers_secret_door_2")
spawn("eob_sewers_secret_door", 3,27,1, "eob_sewers_secret_door_3")
spawn("eob_sewers_secret_door", 3,27,0, "eob_sewers_secret_door_4")
spawn("eob_sewers_pillar", 4,28,2, "eob_sewers_pillar_5")
spawn("torch_holder", 13,20,3, "torch_holder_1")
	:addTorch()
spawn("torch_holder", 20,23,2, "torch_holder_7")
	:addTorch()
spawn("torch_holder", 26,16,1, "torch_holder_8")
	:addTorch()
spawn("eob_sewers_wall_text_long", 9,21,2, "eob_sewers_wall_text_long_9")
	:setWallText("Entry Level.")
spawn("sewers_fog", 4,22,0, "sewers_fog_17")
spawn("eob_gold_key", 3,15,0, "eob_gold_key_1")
spawn("eob_sewers_cave_in_ceiling", 9,16,0, "eob_sewers_cave_in_ceiling_1")
spawn("eob_rock", 9,16,0, "eob_rock_6")
spawn("sewers_fog", 4,16,3, "sewers_fog_18")
spawn("sewers_fog", 8,17,1, "sewers_fog_19")
spawn("floor_dirt", 8,19,0, "floor_dirt_2")
spawn("floor_dirt", 8,15,2, "floor_dirt_3")
spawn("dungeon_ivy_1", 9,16,1, "dungeon_ivy_1_20")
spawn("dungeon_ivy_2", 9,17,1, "dungeon_ivy_2_14")
spawn("dungeon_ivy_2", 9,19,2, "dungeon_ivy_2_15")
spawn("dungeon_ivy_1", 8,19,3, "dungeon_ivy_1_21")
spawn("dungeon_ivy_1", 7,15,0, "dungeon_ivy_1_22")
spawn("dungeon_ivy_1", 4,15,0, "dungeon_ivy_1_23")
spawn("floor_corpse", 9,18,2, "floor_corpse_1")
spawn("eob_metal_hooks_chain", 9,18,1, "eob_metal_hooks_chain_1")
spawn("eob_metal_hooks_chain", 3,15,0, "eob_metal_hooks_chain_2")
spawn("eob_sewers_secret_door", 17,12,0, "eob_sewers_secret_door_5")
	:setDoorState("open")
spawn("eob_sewers_secret_door", 17,12,2, "eob_sewers_secret_door_6")
	:setDoorState("open")
spawn("eob_sewers_secret_door", 16,13,3, "eob_sewers_secret_door_7")
	:setDoorState("open")
spawn("eob_sewers_secret_door", 15,13,3, "eob_sewers_secret_door_8")
	:setDoorState("open")
spawn("eob_sewers_secret_door", 11,12,0, "eob_sewers_secret_door_9")
	:setDoorState("open")
spawn("eob_sewers_secret_door", 11,12,2, "eob_sewers_secret_door_10")
	:setDoorState("open")
spawn("eob_sewers_door_metal", 5,13,3, "eob_sewers_door_metal_11")
spawn("eob_sewers_pressure_plate", 5,14,0, "eob_sewers_pressure_plate_6")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(true)
	:addConnector("activate", "eob_sewers_door_metal_11", "open")
	:addConnector("deactivate", "eob_sewers_door_metal_11", "close")
spawn("eob_sewers_secret_door", 12,9,2, "eob_sewers_secret_door_11")
	:setDoorState("open")
spawn("eob_sewers_secret_door", 12,9,0, "eob_sewers_secret_door_12")
	:setDoorState("open")
spawn("eob_sewers_secret_door", 16,2,2, "eob_sewers_secret_door_13")
	:setDoorState("open")
spawn("eob_sewers_secret_door", 16,3,2, "eob_sewers_secret_door_14")
	:setDoorState("open")
spawn("eob_sewers_secret_door", 21,3,3, "eob_sewers_secret_door_15")
	:setDoorState("open")
spawn("eob_sewers_secret_door", 22,3,3, "eob_sewers_secret_door_16")
	:setDoorState("open")
spawn("eob_sewers_secret_door", 22,8,0, "eob_sewers_secret_door_17")
	:setDoorState("open")
spawn("eob_sewers_secret_door", 22,8,2, "eob_sewers_secret_door_18")
	:setDoorState("open")
spawn("eob_sewers_secret_door", 21,8,1, "eob_sewers_secret_door_19")
	:setDoorState("open")
spawn("eob_sewers_secret_door", 13,12,1, "eob_sewers_secret_door_20")
spawn("eob_sewers_secret_door", 10,10,2, "eob_sewers_secret_door_21")
spawn("eob_sewers_secret_door", 11,5,3, "eob_sewers_secret_door_22")
spawn("eob_sewers_secret_door", 11,5,1, "eob_sewers_secret_door_23")
spawn("eob_sewers_secret_door", 12,4,0, "eob_sewers_secret_door_24")
spawn("eob_sewers_wall_drainage", 12,8,0, "eob_sewers_wall_drainage_17")
spawn("eob_sewers_wall_drainage", 12,6,2, "eob_sewers_wall_drainage_18")
spawn("eob_sewers_secret_door", 17,2,1, "eob_sewers_secret_door_25")
spawn("eob_sewers_secret_door", 16,2,1, "eob_sewers_secret_door_26")
spawn("eob_sewers_secret_door", 22,5,0, "eob_sewers_secret_door_27")
spawn("eob_sewers_secret_door", 22,5,3, "eob_sewers_secret_door_28")
spawn("eob_sewers_secret_door", 22,5,1, "eob_sewers_secret_door_29")
spawn("eob_sewers_pillar", 23,5,3, "eob_sewers_pillar_7")
spawn("eob_rations", 13,6,1, "eob_rations_8")
spawn("eob_teleporter_rats", 27,9,1, "eob_teleporter_rats_3")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setTeleportTarget(9,24,1,2)
spawn("torch_holder", 20,10,0, "torch_holder_9")
	:addTorch()
spawn("eob_sewers_door_metal", 4,10,1, "eob_sewers_door_metal_9")
spawn("eob_sewers_door_portcullis", 2,9,0, "portcullis_door_throwable_force_3")
	:setDoorState("open")
spawn("eob_wall_button", 2,8,0, "eob_wall_button_12")
	:setActivateOnce(true)
	:addConnector("toggle", "eob_sewers_secret_door_9", "close")
	:addConnector("toggle", "eob_sewers_secret_door_10", "close")
	:addConnector("toggle", "eob_sewers_secret_door_8", "close")
	:addConnector("toggle", "eob_sewers_secret_door_7", "close")
	:addConnector("toggle", "eob_sewers_secret_door_5", "close")
	:addConnector("toggle", "eob_sewers_secret_door_6", "close")
	:addConnector("toggle", "eob_sewers_secret_door_11", "close")
	:addConnector("toggle", "eob_sewers_secret_door_12", "close")
	:addConnector("toggle", "eob_sewers_secret_door_13", "close")
	:addConnector("toggle", "eob_sewers_secret_door_14", "close")
	:addConnector("toggle", "eob_sewers_secret_door_15", "close")
	:addConnector("toggle", "eob_sewers_secret_door_16", "close")
	:addConnector("toggle", "eob_sewers_secret_door_27", "close")
	:addConnector("toggle", "eob_sewers_secret_door_28", "close")
	:addConnector("toggle", "eob_sewers_secret_door_29", "close")
	:addConnector("toggle", "eob_sewers_secret_door_19", "open")
	:addConnector("toggle", "eob_sewers_secret_door_18", "open")
	:addConnector("toggle", "eob_sewers_secret_door_17", "open")
	:addConnector("toggle", "eob_sewers_secret_door_20", "open")
	:addConnector("toggle", "eob_sewers_secret_door_21", "open")
	:addConnector("toggle", "eob_sewers_secret_door_22", "open")
	:addConnector("toggle", "eob_sewers_secret_door_23", "open")
	:addConnector("toggle", "eob_sewers_secret_door_24", "open")
	:addConnector("toggle", "eob_sewers_secret_door_26", "open")
	:addConnector("toggle", "eob_sewers_secret_door_25", "open")
spawn("eob_lever", 2,8,1, "eob_lever_4")
	:addConnector("activate", "eob_sewers_door_metal_9", "open")
spawn("eob_potion_healing", 6,11,2, "eob_potion_healing_2")
spawn("sewers_fog", 14,11,0, "sewers_fog_20")
spawn("sewers_fog", 23,5,2, "sewers_fog_21")
spawn("floor_dirt", 6,9,2, "floor_dirt_38")
spawn("floor_dirt", 14,15,3, "floor_dirt_39")
spawn("floor_dirt", 14,4,3, "floor_dirt_40")
spawn("dungeon_ivy_1", 6,10,1, "dungeon_ivy_1_24")
spawn("dungeon_ivy_1", 15,9,0, "dungeon_ivy_1_25")
spawn("dungeon_ivy_2", 15,2,3, "dungeon_ivy_2_16")
spawn("dungeon_ivy_2", 19,2,1, "dungeon_ivy_2_17")
spawn("dungeon_ivy_2", 2,13,3, "dungeon_ivy_2_18")
spawn("sewers_fog", 4,10,2, "sewers_fog_22")
spawn("sewers_fog", 15,7,0, "sewers_fog_23")
spawn("sewers_fog", 24,12,3, "sewers_fog_24")
spawn("torch_holder", 22,13,3, "torch_holder_10")
	:addTorch()
spawn("dungeon_ivy_2", 23,14,2, "dungeon_ivy_2_19")
spawn("eob_sewers_door_metal", 28,5,2, "eob_sewers_door_metal_10")
spawn("eob_lock_golden", 27,6,0, "eob_lock_golden_1")
	:setOpenedBy("eob_gold_key")
	:addConnector("activate", "eob_sewers_door_metal_10", "open")
spawn("blocker", 18,13,3, "blocker_2")
spawn("blocker", 9,11,1, "blocker_3")
spawn("blocker", 25,8,2, "blocker_4")
spawn("eob_sewers_wall_text_long", 28,10,3, "eob_sewers_wall_text_long_10")
	:setWallText("R.A.T.S.")
spawn("floor_dirt", 1,11,2, "floor_dirt_15")
spawn("dungeon_ivy_1", 1,11,2, "dungeon_ivy_1_26")
spawn("sewers_fog", 18,4,2, "sewers_fog_25")
spawn("sewers_fog", 12,4,2, "sewers_fog_26")
spawn("sewers_fog", 10,11,2, "sewers_fog_27")
spawn("sewers_fog", 24,27,3, "sewers_fog_29")
spawn("secret", 2,26,3, "secret_4")
spawn("floor_corpse", 3,15,1, "floor_corpse_3")
spawn("eob_sewers_door_metal_force", 20,18,3, "eob_sewers_door_metal_stucked")
spawn("eob_sewers_door_metal_force", 27,13,1, "eob_sewers_door_metal_force_1")
spawn("eob_sewers_door_metal_force", 28,15,2, "eob_sewers_door_metal_force_2")
spawn("eob_sewers_door_metal_force", 7,13,3, "eob_sewers_door_metal_force_3")
spawn("eob_sewers_door_metal_force", 7,15,3, "eob_sewers_door_metal_force_4")
spawn("eob_sewers_door_portcullis", 22,16,1, "portcullis_door_throwable_3")
	:setDoorState("open")
spawn("eob_sewers_door_portcullis", 21,19,2, "portcullis_door_throwable_force_1")
	:setDoorState("open")
spawn("door_throwable", 22,16,1, "door_throwable_3")
	:setSource("state = \"closed\"\
function getState() return state end\
function setState(newstate) state = newstate end\
function open() throwable_portcullis.open(self) end\
function close() throwable_portcullis.close(self) end\
function spawnFakePortcullis() throwable_portcullis.spawnFakePortcullis(self) end\
\
-- spawn(\"eob_sewers_door_portcullis\", self.level, self.x, self.y, self.facing, \"portcullis_\"..self.id):setDoorState('open')\
spawn(\"blocker\", self.level, self.x, self.y, self.facing, \"blocker_\"..self.id)\
spawn(\"timer\", self.level, self.x, self.y, self.facing, \"timer_\"..self.id):setTimerInterval(1):addConnector('activate',self.id,'spawnFakePortcullis')\
self.spawnFakePortcullis()")
spawn("door_throwable", 8,30,1, "door_throwable_4")
	:setSource("state = \"closed\"\
function getState() return state end\
function setState(newstate) state = newstate end\
function open() throwable_portcullis.open(self) end\
function close() throwable_portcullis.close(self) end\
function spawnFakePortcullis() throwable_portcullis.spawnFakePortcullis(self) end\
\
-- spawn(\"eob_sewers_door_portcullis\", self.level, self.x, self.y, self.facing, \"portcullis_\"..self.id):setDoorState('open')\
spawn(\"blocker\", self.level, self.x, self.y, self.facing, \"blocker_\"..self.id)\
spawn(\"timer\", self.level, self.x, self.y, self.facing, \"timer_\"..self.id):setTimerInterval(1):addConnector('activate',self.id,'spawnFakePortcullis')\
self.spawnFakePortcullis()")
spawn("eob_sewers_door_portcullis", 8,30,1, "portcullis_door_throwable_4")
	:setDoorState("open")
spawn("door_throwable_force", 21,19,2, "door_throwable_force_1")
	:setSource("state = \"closed\"\
function getState() return state end\
function setState(newstate) state = newstate end\
function open() throwable_portcullis.open(self) end\
function close() throwable_portcullis.close(self) end\
function spawnFakePortcullis() throwable_portcullis.spawnFakePortcullis(self) end\
\
-- spawn(\"eob_sewers_door_portcullis\", self.level, self.x, self.y, self.facing, \"portcullis_\"..self.id):setDoorState('open')\
spawn(\"blocker\", self.level, self.x, self.y, self.facing, \"blocker_\"..self.id)\
spawn(\"timer\", self.level, self.x, self.y, self.facing, \"timer_\"..self.id):setTimerInterval(1):addConnector('activate',self.id,'spawnFakePortcullis')\
self.spawnFakePortcullis()")
spawn("door_throwable_force", 2,9,0, "door_throwable_force_3")
	:setSource("state = \"closed\"\
function getState() return state end\
function setState(newstate) state = newstate end\
function open() throwable_portcullis.open(self) end\
function close() throwable_portcullis.close(self) end\
function spawnFakePortcullis() throwable_portcullis.spawnFakePortcullis(self) end\
\
-- spawn(\"eob_sewers_door_portcullis\", self.level, self.x, self.y, self.facing, \"portcullis_\"..self.id):setDoorState('open')\
spawn(\"blocker\", self.level, self.x, self.y, self.facing, \"blocker_\"..self.id)\
spawn(\"timer\", self.level, self.x, self.y, self.facing, \"timer_\"..self.id):setTimerInterval(1):addConnector('activate',self.id,'spawnFakePortcullis')\
self.spawnFakePortcullis()")
spawn("eob_ladder_down", 22,22,0, "eob_ladder_down_1")
spawn("eob_ladder_up", 1,29,2, "eob_ladder_up_1")
spawn("eob_sewers_ceiling_shaft", 1,29,1, "eob_sewers_ceiling_shaft_4")
spawn("eob_sewers_pit_fake", 22,22,2, "eob_sewers_pit_fake_1")
spawn("teleporter", 18,23,1, "teleporter_1")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setTeleportTarget(17,23,1,1)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
spawn("eob_ladder_up", 18,23,3, "eob_ladder_up_2")
spawn("eob_sewers_ceiling_shaft", 18,23,3, "eob_sewers_ceiling_shaft_10")
spawn("eob_sewers_pit_fake", 27,4,3, "eob_sewers_pit_fake_3")
spawn("eob_ladder_down", 27,4,3, "eob_ladder_down_3")
spawn("teleporter", 27,4,1, "teleporter_9")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setTeleportTarget(26,4,1,3)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
spawn("eob_sewers_secret_door", 26,15,0, "eob_sewers_secret_door_1")
spawn("eob_sewers_alcove_dagger", 22,16,0, "eob_sewers_alcove_dagger_1")
	:addConnector("any", "script_entity_2", "SpecialQuest2")
spawn("eob_sewers_alcove_dagger", 21,30,2, "eob_sewers_alcove_dagger_3")
	:addConnector("any", "script_entity_2", "SpecialQuest2")
spawn("eob_sewers_alcove_dagger", 14,29,3, "eob_sewers_alcove_dagger_4")
	:addConnector("any", "script_entity_2", "SpecialQuest2")
spawn("eob_sewers_alcove_dagger", 9,30,2, "eob_sewers_alcove_dagger_5")
	:addConnector("any", "script_entity_2", "SpecialQuest2")
spawn("script_entity", 24,16,2, "door_throwable_3_opener")
	:setSource("-- sript to create the wall, button and open portcullis...\
\
spawn(\"eob_sewers_wall_blockage_2_24_16\", 2, 24, 16, 3, \"eob_sewers_wall_blockage_2_24_16_3\")\
spawn(\"eob_wall_button\", 2, 23, 16, 1, \"eob_wall_button_2_24_16_3\"):addConnector('toggle',self.id,'removewall')\
spawn(\"timer\", 2, 24, 16, 0, \"timer_\"..self.id):setTimerInterval(0.5):addConnector('activate',self.id,'removewall')\
\
function activate()\
\9playSoundAt(\"button\", 2, 23,16)\
\9door_throwable_3.open()\
\9timer_door_throwable_3_opener:activate()\
end\
\
function removewall()\
\9playSoundAt(\"pit_close\", 2, 23,16)\
\9eob_wall_button_2_24_16_3:destroy()\
\9eob_sewers_wall_blockage_2_24_16_3:destroy()\
\9timer_door_throwable_3_opener:deactivate()\
end")
spawn("eob_sewers_wall_pipe", 20,8,3, "eob_sewers_wall_pipe_7")
	:setEntityType("blob")
spawn("eob_sewers_wall_pipe", 18,8,1, "eob_sewers_wall_pipe_8")
	:setEntityType("blob")
spawn("eob_sewers_wall_pipe", 19,16,2, "eob_sewers_wall_pipe_9")
	:setEntityType("blob")
spawn("eob_sewers_wall_pipe", 19,18,0, "eob_sewers_wall_pipe_10")
	:setEntityType("blob")
spawn("eob_sewers_wall_pipe", 25,17,2, "eob_sewers_wall_pipe_11")
	:setEntityType("blob")
spawn("eob_sewers_wall_pipe", 25,19,0, "eob_sewers_wall_pipe_12")
	:setEntityType("blob")
spawn("eob_sewers_wall_pipe", 17,25,2, "eob_sewers_wall_pipe_13")
	:setEntityType("blob")
spawn("eob_sewers_wall_pipe", 17,27,0, "eob_sewers_wall_pipe_14")
	:setEntityType("blob")
spawn("eob_sewers_wall_pipe", 23,28,0, "eob_sewers_wall_pipe_15")
	:setEntityType("blob")
spawn("eob_sewers_wall_pipe", 23,26,2, "eob_sewers_wall_pipe_16")
	:setEntityType("blob")
spawn("eob_sewers_wall_pipe", 25,27,2, "eob_sewers_wall_pipe_17")
	:setEntityType("blob")
spawn("eob_sewers_wall_pipe", 25,29,0, "eob_sewers_wall_pipe_18")
	:setEntityType("blob")

--- level 3 ---

mapName("Lower Sewer Level")
setWallSet("sewers")
playStream("assets/samples/music/dungeon_ambient.ogg")
mapDesc([[
################################
#......#...###............#....#
#.#....#.#.#...######.###...#..#
#.######.#####.#.#...#####.##..#
####.........#.#..#.#....#..##.#
####.#.#####.#.##...###.##.#.#.#
#..#.#.#.##..#...##.#....###.#.#
#.##.#....##.###....#.##.#...#.#
#....##....#....#.#.#......###.#
#.##.##....#.##.#.#..#.#####...#
#.##..##.#.#.#..#.####.........#
#.##.#####.#.####.#...##########
#.##.........#....#.#.##########
#.######.#####....#.#.....#..###
#.#..#.#.#...##.###...###....###
#.#..#...#........###...#.###..#
#.#...#################.#..#...#
#.###.....#..........##.###..#.#
#.####..#.#.######.#.##.....#..#
#.#.##.#......#....#.#######...#
#......#.....##....#.........#.#
########.....##....#...##.##.#.#
#.....##......#....#.####.##.#.#
###.##..#######.####..###......#
#.#.#..##.......#...#.##########
#.#.#.#...#.##.#.......#.......#
#...#.#.#.#.#..#.......#.......#
##......#.....##.......#.......#
#.####.##.#.#..#.......#.......#
#...#...#.#.##.#.......#.......#
#.#...#...#....#.......#.......#
################################
]])
spawn("torch_holder", 26,3,1, "torch_holder_11")
	:addTorch()
spawn("eob_sewers_wall_drainage", 19,4,1, "eob_sewers_wall_drainage_19")
spawn("eob_sewers_wall_drainage", 21,4,3, "eob_sewers_wall_drainage_20")
spawn("torch_holder", 27,25,0, "torch_holder_12")
	:addTorch()
spawn("eob_teleporter_rats", 21,2,2, "eob_teleporter_rats_2")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(true)
	:setTeleportTarget(3,20,2,3)
spawn("teleporter", 17,1,1, "teleporter_moveto241")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setTeleportTarget(24,1,1,3)
	:setChangeFacing(false)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
	:deactivate()
spawn("pressure_plate_hidden", 17,1,2, "pressure_plate_hidden_6")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(true)
	:setTriggeredByItem(true)
	:setSilent(true)
	:addConnector("activate", "script_moveto241", "activate")
spawn("script_entity", 17,0,3, "script_moveto241")
	:setSource("moveto_level3_241_east = false\
moveto_level3_241_east_passed = false\
\
function activate()\
\9if moveto_level3_241_east then\
\9\9moveto_level3_241_east = false\
\9\9if moveto_level3_241_east_passed then\
\9\9\9return false\
\9\9else\
\9\9\9moveto_level3_241_east_passed = true\
\9\9end\
\9end\
\9local timer = spawn(\"timer\", self.level, self.x, self.y, 0)\
\9timer:addConnector(\"activate\", \"script_moveto241\", \"deactivateByTimer\")\
\9timer:setTimerInterval(0.4)\
\9timer:activate()\
\9teleporter_moveto241:activate()\
end\
\
function deactivateByTimer(sender)\
\9teleporter_moveto241:deactivate()\
\9sender:destroy()\
end\
\
function setMoveFromEast()\
\9moveto_level3_241_east = true\
end\
")
spawn("pressure_plate_hidden", 18,1,3, "pressure_plate_hidden_17")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_moveto241", "setMoveFromEast")
spawn("eob_sewers_door_metal", 28,1,1, "eob_sewers_door_metal_12")
	:addPullChain()
spawn("eob_sewers_door_metal", 30,4,0, "eob_sewers_door_metal_13")
	:addPullChain()
spawn("eob_sewers_door_metal", 30,9,0, "eob_sewers_door_metal_14")
	:addPullChain()
spawn("eob_sewers_door_metal", 28,10,3, "eob_sewers_door_metal_15")
	:addPullChain()
spawn("eob_sewers_door_metal", 23,10,3, "eob_sewers_door_metal_16")
	:addPullChain()
spawn("teleporter_rotator180", 30,6,1, "teleporter_rotator180_1")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setTeleportTarget(30,6,1,3)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
spawn("teleporter_rotator180", 25,10,3, "teleporter_rotator180_2")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setTeleportTarget(25,10,3,3)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
spawn("eob_silver_key", 28,9,0, "eob_silver_key_2")
spawn("eob_sewers_wall_text_long", 20,9,2, "eob_sewers_wall_text_long_6")
	:setWallText("Under construction.\
Thank you for playing...")
spawn("teleporter", 27,4,3, "teleporter_10")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setTeleportTarget(28,4,3,2)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
spawn("eob_ladder_up", 27,4,1, "eob_ladder_up_3")
spawn("eob_sewers_ceiling_shaft", 27,4,3, "eob_sewers_ceiling_shaft_11")
spawn("eob_sewers_wall_pipe", 22,10,2, "eob_sewers_wall_pipe_19")
	:setEntityType("blob")
spawn("eob_sewers_wall_pipe", 21,11,1, "eob_sewers_wall_pipe_20")
	:setEntityType("blob")
spawn("eob_sewers_wall_drainage", 25,20,0, "eob_sewers_wall_drainage_21")
spawn("eob_sewers_wall_drainage", 25,18,2, "eob_sewers_wall_drainage_22")
spawn("blocker", 19,9,3, "blocker_7")
spawn("blocker", 1,20,1, "blocker_10")
spawn("eob_teleporter_rats", 3,19,0, "eob_teleporter_rats_5")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(true)
	:setTeleportTarget(21,1,0,3)
spawn("eob_sewers_wall_text_long", 2,20,0, "eob_sewers_wall_text_long_11")
	:setWallText("R.A.T.S.")
spawn("eob_sewers_wall_text_long", 22,1,2, "eob_sewers_wall_text_long_12")
	:setWallText("R.A.T.S.")
spawn("eob_kuotoa", 23,4,2, "eob_kuotoa_1")
	:addItem(spawn("eob_rations"))
spawn("pressure_plate_hidden", 30,4,2, "pressure_plate_hidden_10")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "eob_sewers_door_metal_13", "close")
spawn("pressure_plate_hidden", 30,6,0, "pressure_plate_hidden_11")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_entity_4", "message")
spawn("script_entity", 29,8,0, "script_entity_4")
	:setSource("function message()\
\9hudPrint(texts.getT(\"feel_dizzy\"))\
end\
")
spawn("pressure_plate_hidden", 25,10,3, "pressure_plate_hidden_12")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_entity_4", "message")
spawn("sewers_fog", 30,6,2, "sewers_fog_28")
spawn("sewers_fog", 25,10,2, "sewers_fog_30")
spawn("pressure_plate_hidden", 30,8,3, "pressure_plate_hidden_13")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "eob_sewers_door_metal_14", "close")
spawn("pressure_plate_hidden", 27,10,2, "pressure_plate_hidden_14")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "eob_sewers_door_metal_15", "close")
spawn("pressure_plate_hidden", 23,10,2, "pressure_plate_hidden_15")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "eob_sewers_door_metal_16", "close")
spawn("eob_flind", 22,8,2, "eob_flind_1")
	:addItem(spawn("eob_mace"))
	:addItem(spawn("eob_silver_key"))
spawn("eob_arrow", 21,6,3, "eob_arrow_4")
spawn("eob_kuotoa", 17,5,2, "eob_kuotoa_2")
spawn("eob_kuotoa", 19,3,2, "eob_kuotoa_3")
spawn("eob_sewers_secret_door", 13,2,1, "eob_sewers_secret_door_30")
spawn("eob_sewers_secret_button", 14,3,3, "eob_sewers_secret_button_5")
	:addConnector("toggle", "eob_sewers_secret_door_30", "toggle")
spawn("eob_scroll_cause_light_wnds", 12,2,3, "eob_scroll_cause_light_wnds_1")
spawn("eob_sewers_door_metal", 17,12,0, "eob_sewers_door_metal_17")
	:addPullChain()
spawn("eob_sewers_secret_door", 15,14,0, "eob_sewers_secret_door_31")
spawn("arrow", 15,13,1, "arrow_1")
spawn("eob_lock_silver_large", 16,13,2, "eob_lock_silver_large_1")
	:setOpenedBy("eob_silver_key")
	:addConnector("activate", "script_entity_9", "ButtonRed1")
spawn("eob_lock_silver_large", 15,13,2, "eob_lock_silver_large_2")
	:setOpenedBy("eob_silver_key")
	:addConnector("activate", "script_entity_9", "ButtonBlue")
spawn("eob_lock_silver_large", 14,13,2, "eob_lock_silver_large_3")
	:setOpenedBy("eob_silver_key")
	:addConnector("activate", "script_entity_9", "ButtonRed2")
spawn("eob_sewers_secret_door", 16,13,2, "eob_sewers_secret_door_32")
spawn("eob_sewers_secret_door", 14,13,2, "eob_sewers_secret_door_34")
spawn("script_entity", 15,12,0, "script_entity_9")
	:setSource("LockButtonRed1 = false\
LockButtonRed2 = false\
\
-- spawn Button Red on 16,13\
function ButtonRed1()\
\9eob_lock_silver_large_1:destroy()\
\9spawn(\"eob_lock_button_red\", 3, 16, 13, 2):addConnector('toggle',self.id,'SpawnK1')\
end\
-- spawn Button Red on 14,13\
function ButtonRed2()\
\9eob_lock_silver_large_3:destroy()\
\9spawn(\"eob_lock_button_red\", 3, 14, 13, 2):addConnector('toggle',self.id,'SpawnK2')\
end\
-- spawn Button Blue on 15,13\
function ButtonBlue()\
\9eob_lock_silver_large_2:destroy()\
\9spawn(\"eob_lock_button_blue\", 3, 15, 13, 2, \"button_blue_2_15_13\"):addConnector('toggle',self.id,'OpenDoor')\
end\
\
-- summon Kuo-Toa on 16,12 --\
function SpawnK1()\
\9if not LockButtonRed1 then\
\9\9spawn(\"eob_kuotoa\", 3, 16, 12, 2):addItem(spawn(\"eob_silver_key\")):addItem(spawn(\"eob_rations\"))\
\9\9LockButtonRed1 = true\
\9end\
end\
-- summon Kuo-Toa on 14,12 --\
function SpawnK2()\
\9if not LockButtonRed2 then\
\9\9spawn(\"eob_kuotoa\", 3, 14, 12, 2):addItem(spawn(\"eob_silver_key\")):addItem(spawn(\"eob_rations\"))\
\9\9LockButtonRed2 = true\
\9end\
end\
\
function OpenDoor()\
\9button_blue_2_15_13:destroy()\
\9eob_sewers_secret_door_31:open()\
end")
spawn("pressure_plate_hidden", 12,15,2, "pressure_plate_hidden_16")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setActivateOnce(true)
	:setSilent(true)
	:addConnector("activate", "script_entity_10", "SpawnPit")
spawn("eob_gem_red", 10,15,3, "eob_gem_red_1")
spawn("eob_dagger_backstabber", 10,15,0, "eob_dagger_backstabber_1")
spawn("eob_scroll_detect_magic", 12,14,0, "eob_scroll_detect_magic_2")
spawn("eob_sewers_pit_illusion_off", 11,15,2, "eob_sewers_pit_illusion_off_3")
spawn("teleporter", 11,15,0, "teleporter_pit_8")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(true)
	:setTeleportTarget(19,24,0,4)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
	:deactivate()
spawn("script_entity", 11,15,3, "script_entity_10")
	:setSource("function SpawnPit()\
\9illusion_pits.toggle(self)\
end")
spawn("eob_sewers_door_metal", 26,14,3, "eob_sewers_door_metal_18")
spawn("eob_kuotoa", 27,14,3, "eob_kuotoa_4")
spawn("eob_potion_healing", 28,13,3, "eob_potion_healing_3")
spawn("eob_potion_healing_extra", 28,13,2, "eob_potion_healing_extra_2")
spawn("eob_lock_silver", 25,13,1, "eob_lock_silver_5")
	:setOpenedBy("eob_silver_key")
	:addConnector("activate", "eob_sewers_door_metal_18", "open")
spawn("eob_lock_silver", 26,16,0, "eob_lock_silver_7")
	:setOpenedBy("eob_silver_key")
	:addConnector("activate", "eob_sewers_door_metal_18", "open")
spawn("eob_kuotoa", 28,19,1, "eob_kuotoa_5")
	:addItem(spawn("eob_rations"))
spawn("eob_sewers_pit_illusion_off", 21,20,2, "eob_sewers_pit_illusion_off_5")
spawn("teleporter", 21,20,0, "teleporter_13")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(true)
	:setTeleportTarget(29,29,0,4)
	:setInvisible(true)
	:setSilent(true)
	:setHideLight(true)
	:setScreenFlash(false)
	:deactivate()
spawn("script_entity", 21,20,3, "script_entity_12")
	:setSource("function SpawnPit()\
\9illusion_pits.toggle(self)\
end")
spawn("pressure_plate_hidden", 22,20,2, "pressure_plate_hidden_19")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setActivateOnce(true)
	:setSilent(true)
	:addConnector("activate", "script_entity_12", "SpawnPit")
spawn("eob_sewers_door_metal", 21,24,0, "eob_sewers_door_metal_19")

--- level 4 ---

mapName("Upper Level Dwarven Ruins")
setWallSet("temple")
playStream("assets/samples/music/temple_ambient.ogg")
mapDesc([[
##############################.#
#........................##..#.#
#.#####.#######...##.###.##..#.#
#.#...#.......#...#..##..###.#.#
#.###.#.#####..####..##..#.#.#.#
#.....#.#..........##..###.#...#
#.#.#.#.#..##..#.#.....#.#.#.#.#
#.....#.#.#...#...#.###....#.#.#
#.#.#.#.###.#####.#...####...#.#
#.....#.#.....#.#.#.##..##.###.#
###.###.#.....#.###.....##.#..##
#...###.#.....#...#.####.#.#..##
#.##.##.#.....##.#.....#.#.#.#.#
#.##.#..#.#.#.#..#.##..#..##.#.#
#.#..#.#..#.#..#.#.#.###.#.#...#
#.#..#.#..#.#..#.#.#...#.#.#.#.#
#.##.#.###...####...#.####.#.#.#
#.#..#.###...#....#....###.#.#.#
#.#..#.######..#######...###.#.#
#.#..#.#...#...#.#...#.....#...#
#.####.#...#...#.#...#...#.#.#.#
#.#..#.#...#...#.#...#####.#.#.#
#....#.#####..##.######....#.#.#
#.#..#.#..##.....#...##.#####..#
#.####.#..#.####.#......#...#.##
#.####.#.##.#..#.#...##.#.....##
#..............#.#####......#.##
##.###.##.###.##.#####..#.###.##
#...#...#..##..........#...#...#
#...#...#..#.#.#.#####.#.......#
#...#...#..#...........#...#...#
##############################.#
]])
spawn("eob_rock", 19,24,1, "eob_rock_7")
spawn("eob_arrow", 20,25,1, "eob_arrow_5")
spawn("eob_ruins_ceiling_shaft", 19,24,2, "eob_ruins_ceiling_shaft_1")
spawn("eob_ruins_ceiling_shaft", 29,29,2, "eob_ruins_ceiling_shaft_2")
spawn("eob_silver_key", 28,28,3, "eob_silver_key_3")
spawn("eob_rock", 30,28,1, "eob_rock_8")
